{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/cactus/source/css/rtl.styl","path":"css/rtl.styl","modified":1,"renderable":1},{"_id":"themes/cactus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/cactus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","path":"lib/vazir-font/Vazir-Black.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","path":"lib/vazir-font/Vazir-Black.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","path":"lib/vazir-font/Vazir-Bold.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","path":"lib/vazir-font/Vazir-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","path":"lib/vazir-font/Vazir-Light.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","path":"lib/vazir-font/Vazir-Light.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","path":"lib/vazir-font/Vazir-Medium.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","path":"lib/vazir-font/Vazir-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","path":"lib/vazir-font/Vazir-Thin.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","path":"lib/vazir-font/Vazir-Thin.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","path":"lib/vazir-font/Vazir.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","path":"lib/vazir-font/Vazir.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","path":"lib/vazir-font/font-face.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","path":"lib/vazir-font/Vazir-Black.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","path":"lib/vazir-font/Vazir-Black.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","path":"lib/vazir-font/Vazir-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","path":"lib/vazir-font/Vazir-Bold.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","path":"lib/vazir-font/Vazir-Light.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","path":"lib/vazir-font/Vazir-Light.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","path":"lib/vazir-font/Vazir-Medium.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","path":"lib/vazir-font/Vazir-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","path":"lib/vazir-font/Vazir-Thin.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","path":"lib/vazir-font/Vazir-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","path":"lib/vazir-font/Vazir.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","path":"lib/vazir-font/Vazir.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","path":"lib/font-awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","path":"lib/font-awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","path":"lib/font-awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","path":"lib/justified-gallery/css/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/js/jquery.justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","path":"lib/font-awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","path":"lib/font-awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","path":"lib/font-awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","path":"lib/font-awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","path":"lib/font-awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","path":"lib/font-awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","path":"lib/font-awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGL-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGM-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGS-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","path":"lib/meslo-LG/MesloLGL-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","path":"lib/meslo-LG/MesloLGM-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","path":"lib/meslo-LG/MesloLGS-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","path":"lib/meslo-LG/MesloLGL-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","path":"lib/meslo-LG/MesloLGL-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","path":"lib/meslo-LG/MesloLGM-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","path":"lib/meslo-LG/MesloLGM-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","path":"lib/meslo-LG/MesloLGS-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","path":"lib/meslo-LG/MesloLGS-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","path":"lib/font-awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","path":"lib/font-awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/cactus/.stylintrc","hash":"eb5f48e83657928cb0cbee031373b2cd36ca0083","modified":1551086712468},{"_id":"themes/cactus/LICENSE","hash":"346ece39a983b0e7858c11f785cd846cef9eb875","modified":1551086712468},{"_id":"themes/cactus/README.md","hash":"6b0c6ea10c3a68c3788f2c81065bad37699dc6a7","modified":1551086712468},{"_id":"themes/cactus/_config.yml","hash":"bfeac43946d8fa02a64121197a6bc2a91f9e145a","modified":1551086712468},{"_id":"themes/cactus/gulpfile.js","hash":"2bae290993507026a509665ee5a5326b616f8d68","modified":1551086712468},{"_id":"themes/cactus/package.json","hash":"5bbdbc429e9d46acf97baf7ac5654edde0781064","modified":1551086712473},{"_id":"source/_posts/breakpoint-debug-autolayout.md","hash":"1f260cfd8e9128337e6e747b6fdb641c28419ca5","modified":1551086712466},{"_id":"source/_posts/fight-with-cocoapods.md","hash":"3ef7849ca8bd2d2b7b85cabee0b65cab7ace64a7","modified":1551086712466},{"_id":"source/_posts/python-backend-memo.md","hash":"0605a7da566b9485b8811db0f63f981d859fddb3","modified":1551086841934},{"_id":"source/_posts/sublimetext-remind.md","hash":"60815b71935c5bef5cfd673131f4e3577f8d0aea","modified":1551086712467},{"_id":"source/_posts/yong-swift-xieyi-tuozhan-fuyong.md","hash":"3f5ad42c8ea3777166036985edf996417a8f954a","modified":1551086712467},{"_id":"source/about/index.md","hash":"54c3e4db412586a276f25c144cf699a33e26dc48","modified":1551086712467},{"_id":"source/nag/index.md","hash":"27b52f80d827f4b3dff3ad3ac790e865e88c5ab9","modified":1551086712467},{"_id":"source/.DS_Store","hash":"755b0e473a4f92eb4715c60ecda6d4269bed2891","modified":1551086821307},{"_id":"themes/cactus/languages/ca.yml","hash":"b79dd2c21dc6697c635e92db1f661a4b8d5d2305","modified":1551086712468},{"_id":"themes/cactus/languages/default.yml","hash":"ea91a271db1a49386f97955ed72b2a668e2aea5e","modified":1551086712469},{"_id":"themes/cactus/languages/en.yml","hash":"ea91a271db1a49386f97955ed72b2a668e2aea5e","modified":1551086712469},{"_id":"themes/cactus/languages/es.yml","hash":"2b1fc8b0d636123e9ee39017fa20053bd1913a5a","modified":1551086712469},{"_id":"themes/cactus/languages/fa.yml","hash":"63f32e50953af1c4bd0308a4fca5862b5287c2cb","modified":1551086712469},{"_id":"themes/cactus/languages/fr.yml","hash":"4fea266d3c522903f3eee4fffee6e66c44775005","modified":1551086712469},{"_id":"themes/cactus/languages/it.yml","hash":"62800bcae1f2d2454f87f4bcf4d7593848424f61","modified":1551086712469},{"_id":"themes/cactus/languages/nl.yml","hash":"ac0573352ad2c737a7686bcca498b985e7bd6447","modified":1551086712469},{"_id":"themes/cactus/languages/pl.yml","hash":"8a2d6dc874d86c38d42c2c861c39590647b5d536","modified":1551086712469},{"_id":"themes/cactus/languages/pt-br.yml","hash":"4859aba788a050c2d5d0b997693b0c8c24b349f7","modified":1551086712469},{"_id":"themes/cactus/languages/ru.yml","hash":"81b57fcd1977ef534f4bf303dbc1b4710cc7f057","modified":1551086712470},{"_id":"themes/cactus/languages/tr.yml","hash":"2702914007e6bade9d6861078c0e179ac05bf48c","modified":1551086712470},{"_id":"themes/cactus/languages/zh-CN.yml","hash":"142004800bd580f8ee2f0eba7345c1725a5e2e5e","modified":1551086712470},{"_id":"themes/cactus/layout/archive.ejs","hash":"b5e70bd2780d044b94e22ce8af0afb114c2a6eae","modified":1551086712473},{"_id":"themes/cactus/layout/index.ejs","hash":"2bb56a08ca4dcd9e37170be04ec791fffce8727a","modified":1551086712473},{"_id":"themes/cactus/layout/layout.ejs","hash":"ad0f48fca26b3670c9fbcb3e61bfbaa62dc33ab2","modified":1551086712473},{"_id":"themes/cactus/layout/page.ejs","hash":"c5465d5315a7544aa466b01fd8cfb62917a8bb1d","modified":1551086712473},{"_id":"themes/cactus/layout/post.ejs","hash":"a7d164ce888a60cd3eddd9c04bc6762428fa66bb","modified":1551086712473},{"_id":"themes/cactus/scripts/merge-configs.js","hash":"2048c3415d96b17b9d84aa44bc0c25f1210525f8","modified":1551086712473},{"_id":"themes/cactus/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1551086712474},{"_id":"themes/cactus/scripts/page_title.js","hash":"fa662dbdb82779af1b95e35ed7ccdf4866a53dee","modified":1551086712474},{"_id":"themes/cactus/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1551086712474},{"_id":"themes/cactus/layout/_partial/comments.ejs","hash":"4cf8d0059e5f8bc8ae1dd1a426293583fd398052","modified":1551086712470},{"_id":"themes/cactus/layout/_partial/footer.ejs","hash":"c3a80e347cb11022baf5e65fb4d0209b8d205693","modified":1551086712470},{"_id":"themes/cactus/layout/_partial/head.ejs","hash":"753dcb513c6f21f6f46e673942c7261cf50da886","modified":1551086712470},{"_id":"themes/cactus/layout/_partial/header.ejs","hash":"9b2b7d6e9ab514107adf408c7ec8530fd612b3d5","modified":1551086712471},{"_id":"themes/cactus/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1551086712471},{"_id":"themes/cactus/layout/_partial/scripts.ejs","hash":"78e3e290ab8bb6450a04b2a9c7c5b7b3da74abb8","modified":1551086712472},{"_id":"themes/cactus/layout/_partial/search.ejs","hash":"8b4bf9cf5db0ce762a31fc3baae0f2fc004bece4","modified":1551086712472},{"_id":"themes/cactus/layout/_partial/styles.ejs","hash":"be1b54388eb02176dd4722285dda19e3dce2e62e","modified":1551086712473},{"_id":"themes/cactus/source/css/_extend.styl","hash":"2ff73bd3dbdb58fa69cbadb2a1c0ed966812ce88","modified":1551086712475},{"_id":"themes/cactus/source/css/_fonts.styl","hash":"354809b5a64e8a47a66c66fd1a28ac597c1460a6","modified":1551086712475},{"_id":"themes/cactus/source/css/_mixins.styl","hash":"1a9e309523df9685e8d088dcff0a809c58e2c392","modified":1551086712488},{"_id":"themes/cactus/source/css/_util.styl","hash":"2bfeb2e2605dd5235693b00c71a212646d2e0410","modified":1551086712491},{"_id":"themes/cactus/source/css/_variables.styl","hash":"02079fb71b7d1c01d15fa512a1948ad4cbb416b5","modified":1551086712491},{"_id":"themes/cactus/source/css/rtl.styl","hash":"98355abe9ef3a398a5b4cb40d3d33bf86ac8d1d4","modified":1551086712491},{"_id":"themes/cactus/source/css/style.styl","hash":"935843090dc40797a1e85181253ffe169b883131","modified":1551086712491},{"_id":"themes/cactus/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1551086712491},{"_id":"themes/cactus/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1551086712492},{"_id":"themes/cactus/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1551086712492},{"_id":"themes/cactus/source/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1551086712494},{"_id":"themes/cactus/source/js/search.js","hash":"a74d0c601f820160825a2e4ad13618074d714933","modified":1551086712494},{"_id":"themes/cactus/layout/_partial/post/actions_desktop.ejs","hash":"38aadd1ed890303dde582b722486138afee09b0a","modified":1551086712471},{"_id":"themes/cactus/layout/_partial/post/actions_mobile.ejs","hash":"79b234ff3c264e66b2e71c819228e62bf92b48e4","modified":1551086712471},{"_id":"themes/cactus/layout/_partial/post/category.ejs","hash":"b5bfa049f17868fb09d9d2a7e1d5279fa0381d37","modified":1551086712471},{"_id":"themes/cactus/layout/_partial/post/date.ejs","hash":"12a4a7ba6334e3e5c03d9a9601d7779a27c2e082","modified":1551086712472},{"_id":"themes/cactus/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1551086712472},{"_id":"themes/cactus/layout/_partial/post/share.ejs","hash":"847a400e79b775246ca9067e40c3f104d571413d","modified":1551086712472},{"_id":"themes/cactus/layout/_partial/post/tag.ejs","hash":"e08fae30da060f49c087f6c121868b08eb55c795","modified":1551086712472},{"_id":"themes/cactus/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1551086712472},{"_id":"themes/cactus/source/css/_colors/classic.styl","hash":"0f0ec41a4165814ce69688425d5ac4d701b7cc70","modified":1551086712474},{"_id":"themes/cactus/source/css/_colors/dark.styl","hash":"9c9655b42b85f754b8a573a1d4634c23c680e1bf","modified":1551086712474},{"_id":"themes/cactus/source/css/_colors/light.styl","hash":"d09f781cb02394850737b3a9efc6693307d5bf09","modified":1551086712474},{"_id":"themes/cactus/source/css/_colors/white.styl","hash":"2b25ad24573bded8b42f9d80112eab9fadbed1a5","modified":1551086712475},{"_id":"themes/cactus/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1551086712475},{"_id":"themes/cactus/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1551086712475},{"_id":"themes/cactus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1551086712475},{"_id":"themes/cactus/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1551086712475},{"_id":"themes/cactus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1551086712475},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1551086712476},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1551086712476},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1551086712476},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1551086712476},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1551086712476},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1551086712476},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1551086712476},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1551086712477},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1551086712477},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1551086712477},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1551086712477},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1551086712477},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1551086712477},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1551086712477},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1551086712477},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1551086712478},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1551086712478},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1551086712478},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1551086712478},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1551086712478},{"_id":"themes/cactus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1551086712479},{"_id":"themes/cactus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1551086712479},{"_id":"themes/cactus/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1551086712479},{"_id":"themes/cactus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1551086712479},{"_id":"themes/cactus/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1551086712480},{"_id":"themes/cactus/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1551086712480},{"_id":"themes/cactus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1551086712480},{"_id":"themes/cactus/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1551086712480},{"_id":"themes/cactus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1551086712480},{"_id":"themes/cactus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1551086712480},{"_id":"themes/cactus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1551086712481},{"_id":"themes/cactus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1551086712481},{"_id":"themes/cactus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1551086712481},{"_id":"themes/cactus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1551086712481},{"_id":"themes/cactus/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1551086712481},{"_id":"themes/cactus/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1551086712482},{"_id":"themes/cactus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1551086712482},{"_id":"themes/cactus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1551086712482},{"_id":"themes/cactus/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1551086712482},{"_id":"themes/cactus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1551086712482},{"_id":"themes/cactus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1551086712483},{"_id":"themes/cactus/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1551086712483},{"_id":"themes/cactus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1551086712483},{"_id":"themes/cactus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1551086712483},{"_id":"themes/cactus/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1551086712484},{"_id":"themes/cactus/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1551086712484},{"_id":"themes/cactus/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1551086712484},{"_id":"themes/cactus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1551086712484},{"_id":"themes/cactus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1551086712484},{"_id":"themes/cactus/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1551086712485},{"_id":"themes/cactus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1551086712485},{"_id":"themes/cactus/source/css/_highlight/pojoaque.styl","hash":"4e7b6b046b8575ac749f6aec4e953a62ada27a36","modified":1551086712485},{"_id":"themes/cactus/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1551086712485},{"_id":"themes/cactus/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1551086712485},{"_id":"themes/cactus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1551086712485},{"_id":"themes/cactus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1551086712486},{"_id":"themes/cactus/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1551086712486},{"_id":"themes/cactus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1551086712486},{"_id":"themes/cactus/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1551086712486},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1551086712486},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1551086712487},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1551086712487},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1551086712487},{"_id":"themes/cactus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1551086712487},{"_id":"themes/cactus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1551086712487},{"_id":"themes/cactus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1551086712488},{"_id":"themes/cactus/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1551086712488},{"_id":"themes/cactus/source/css/_partial/archive.styl","hash":"ef8fc52337c4c7b010cad7c427cb78009b30f9d8","modified":1551086712488},{"_id":"themes/cactus/source/css/_partial/article.styl","hash":"2c0569b6ba624160701e69688ca02ecdf24c2ac6","modified":1551086712488},{"_id":"themes/cactus/source/css/_partial/categories.styl","hash":"a43f00e61b3507f130b8a3f8108a4eeca147c2a0","modified":1551086712489},{"_id":"themes/cactus/source/css/_partial/comments.styl","hash":"1e90f1fb9d4c155df518cacb5a537e9de9c042c1","modified":1551086712489},{"_id":"themes/cactus/source/css/_partial/footer.styl","hash":"d9b13e402808175dc90761cc4fdfe3d4808034f8","modified":1551086712489},{"_id":"themes/cactus/source/css/_partial/header.styl","hash":"662667942cc9a2caf55caa84a0fc73617d0c3aa4","modified":1551086712489},{"_id":"themes/cactus/source/css/_partial/index.styl","hash":"59c99f4ea3a73bf47ce030df166c5e33d5de31fb","modified":1551086712489},{"_id":"themes/cactus/source/css/_partial/pagination.styl","hash":"950bf517bbe7adb9a9aa4eb5ddec74ffc7598787","modified":1551086712490},{"_id":"themes/cactus/source/css/_partial/search.styl","hash":"159be002780c62a77f46947cf854a7342fba24f4","modified":1551086712490},{"_id":"themes/cactus/source/css/_partial/tags.styl","hash":"d571d5c7c960300d29c5f0ec3fe1140322ecd6b3","modified":1551086712490},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","hash":"37443d0040f0d7af381c955e4c15919a15d0349e","modified":1551086712521},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","hash":"0a257c8b60e0f20802c1dc8daeed2d3cb0d44f17","modified":1551086712522},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","hash":"df15fd1e74b6f4a50bea57e2b44d9627f38495b5","modified":1551086712524},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","hash":"62447a951d48b21c4696ae72df4bc4adef636e26","modified":1551086712524},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","hash":"32ae5c0d1d5943c8bb8e0f6ab07c3269c6f8b8a8","modified":1551086712526},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","hash":"ef07a250766fea840c1049e67c0405d9216ee0a8","modified":1551086712526},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","hash":"f5653059b2a5929516e4aab02329a978600b9b67","modified":1551086712528},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","hash":"668400ae92700965f03f2371faaee0ab8c8347c3","modified":1551086712529},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","hash":"c3be79b553ec394db71268d604b1d29183b867dc","modified":1551086712531},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","hash":"ad4d46a99a1daf6353c86c79ac3a2b030213859c","modified":1551086712531},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","hash":"bbee70033f0f5882e9869e417b69c6a38f56f187","modified":1551086712534},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","hash":"30ce165216db078951a690a6ad665b9b78f5dd81","modified":1551086712534},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","hash":"8f2bf6b59ae1f2ed4c2fead6cea4b8314fcf62e5","modified":1551086712534},{"_id":"themes/cactus/source/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1551086712493},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1551086712509},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","hash":"13d026ff857c853cbd0dc519b6e58669db309441","modified":1551086712520},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","hash":"594dc3344ad14903c247615427d1009709f0f5a4","modified":1551086712521},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","hash":"2e6c9df9f775373fb1988ae8529aa8f05313dae6","modified":1551086712523},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","hash":"f76ec625e15522ff60d21f7a9a3b71c65bc27556","modified":1551086712523},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","hash":"3edffd7bb61eee8cd46b57225f9f9e5264e3362b","modified":1551086712525},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","hash":"9f1e2934098a6a4a7c5584c8f3fa24a707070da3","modified":1551086712526},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","hash":"1f5a73db7947ef22c8a2bb19d6449b80496c03c4","modified":1551086712527},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","hash":"295f7e02c9b157e7ea63ad09613b00ceab85c5cd","modified":1551086712528},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","hash":"08e1503d1181188690fd9c81860d6c890c1465f6","modified":1551086712530},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","hash":"a6aa450ee6e0f85786474ca6b04827ef97e81af4","modified":1551086712531},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","hash":"31a9219c25fe1991fb745ec8dbbcf45c6094a702","modified":1551086712532},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","hash":"f22b219824026e490a581ddb3b36b07997dff0e3","modified":1551086712533},{"_id":"themes/cactus/source/css/_partial/post/actions_desktop.styl","hash":"4ef72ea70f7c840b2843bf7717aaafae3b6fc241","modified":1551086712490},{"_id":"themes/cactus/source/css/_partial/post/actions_mobile.styl","hash":"0d2966c1d870392476864af8ee3ba312ba30cb82","modified":1551086712490},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","hash":"cf1a3fd771900af34f2af22142beecfb47367548","modified":1551086712494},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"d902f8db3e021155f177f698a252fb98d6e61768","modified":1551086712500},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"42ff503f20e97503cef8e5b2ec10ae07699d7c01","modified":1551086712501},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"c140085833a38abec6b7df99d4ccac93eb266031","modified":1551086712502},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"7b3f44b4d3028f3c87ddf0f4bd62511c9bf4a87e","modified":1551086712502},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"9784edb76f8a2ed595ea4bf74d46cda4eff3b303","modified":1551086712502},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"92da6e3c7121e21cdfde25ef08797a3937a683e1","modified":1551086712508},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1551086712509},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1551086712509},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"644ece8263d2f96b087eebf7f6d4e309e5898eb5","modified":1551086712495},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"19e302760e39e25a5f8d90d6cd0164ef6cd74f8c","modified":1551086712499},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"f9d835a0f9248b1bb33d66968e87c4a50103ed8d","modified":1551086712500},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"80d33a73cbb60e206ef6f5c898988641576c7dda","modified":1551086712508},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"33e86c0ad6fb9c5c0c8c2af4cb2d790c6b14a8aa","modified":1551086712501},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"10740942ec6b3f4985529d343402d0bf32f9f847","modified":1551086712503},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"c445864a9646948e0d7ff44930ad732ee61427d8","modified":1551086712507},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1551086712511},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1551086712514},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1551086712517},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1551086712512},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1551086712514},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1551086712518},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1551086712510},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1551086712512},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1551086712513},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1551086712515},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1551086712516},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1551086712518},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"b0bb9e6ac7709206b9510f1718516d89aead5b21","modified":1551086712498},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"ed6c1ed8f24df909f40fe5e5c652d7ff9570c821","modified":1551086712506},{"_id":"public/about/index.html","hash":"5a0fc9553446a6c31b60864ccced1d945edbfc65","modified":1551086852911},{"_id":"public/nag/index.html","hash":"f054e690286468d43f7ae6a537f99a851631e257","modified":1551086852911},{"_id":"public/archives/index.html","hash":"ceb1d8157337102f5276d92103242c28913f0fd9","modified":1551086852911},{"_id":"public/archives/2016/index.html","hash":"b13b45e221091bf79d0a3002490b8e09503df7dc","modified":1551086852911},{"_id":"public/archives/2016/09/index.html","hash":"e97e68caee7486ef2e86272af17599545d525e24","modified":1551086852911},{"_id":"public/archives/2016/11/index.html","hash":"12273086800a865de88987698e25d0817162b828","modified":1551086852911},{"_id":"public/archives/2018/index.html","hash":"27d8c9aae11cf389dca737481e5a003cc9a40818","modified":1551086852911},{"_id":"public/archives/2018/05/index.html","hash":"68f3ad47e38398951506a0092f3242403c2995b4","modified":1551086852912},{"_id":"public/archives/2018/12/index.html","hash":"d29892e3e0c4d7dd9a4230ea640112a794644fa5","modified":1551086852912},{"_id":"public/archives/2019/index.html","hash":"46868d03d5420c4a166d3764b5bc177d45138cda","modified":1551086852912},{"_id":"public/archives/2019/02/index.html","hash":"739e68d5ebb4fe6044ce67dfd54fb62c276d4f81","modified":1551086852912},{"_id":"public/index.html","hash":"7ddfb10ff40afacf1cb5d70d8a05a12210220a26","modified":1551086852912},{"_id":"public/tags/iOS/index.html","hash":"f12d18c421e686e0c36e541f31f2f4f401ff4fac","modified":1551086852912},{"_id":"public/tags/Python/index.html","hash":"3384f58f62921f29a555bef7b9d90ecc3f2fc0be","modified":1551086852912},{"_id":"public/tags/Flask/index.html","hash":"06e964c88ebe6c33b97204de5f854a41ea61dbda","modified":1551086852912},{"_id":"public/tags/OpenSSL/index.html","hash":"e67e92ffcfd0549cfb5122e178b8d0c5a01afc21","modified":1551086852912},{"_id":"public/tags/Linux/index.html","hash":"ef39079f5e784a40323e1bf4ebad621324e970e7","modified":1551086852912},{"_id":"public/tags/sublime-text/index.html","hash":"6e284f85151ec07f3438c157b62c18b2f02201bc","modified":1551086852912},{"_id":"public/tags/Swift/index.html","hash":"fe50f82f2f7006c4c63af32c3cadf8e7dcf5c40c","modified":1551086852912},{"_id":"public/2019/02/25/python-backend-memo/index.html","hash":"460dc2ba6a8f43ab42dbd55cfc090c54281bc1de","modified":1551086852912},{"_id":"public/2018/12/24/sublimetext-remind/index.html","hash":"666428ee2d79599e724a355c18508fe3f1f905fd","modified":1551086852912},{"_id":"public/2018/05/22/fight-with-cocoapods/index.html","hash":"de486361d69e88762656c7106d54d5d41e0d1fd8","modified":1551086852912},{"_id":"public/2016/11/11/yong-swift-xieyi-tuozhan-fuyong/index.html","hash":"9e7c31cc4d0aba3a37a3cf928980609217bc3b87","modified":1551086852912},{"_id":"public/2016/09/16/breakpoint-debug-autolayout/index.html","hash":"ce4ec1a9dad3a3766f3c10dd21c574e640877646","modified":1551086852912},{"_id":"public/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1551086852921},{"_id":"public/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1551086852921},{"_id":"public/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1551086852921},{"_id":"public/lib/vazir-font/Vazir-Black.woff","hash":"37443d0040f0d7af381c955e4c15919a15d0349e","modified":1551086852921},{"_id":"public/lib/vazir-font/Vazir-Black.woff2","hash":"0a257c8b60e0f20802c1dc8daeed2d3cb0d44f17","modified":1551086852921},{"_id":"public/lib/vazir-font/Vazir-Bold.woff","hash":"df15fd1e74b6f4a50bea57e2b44d9627f38495b5","modified":1551086852921},{"_id":"public/lib/vazir-font/Vazir-Bold.woff2","hash":"62447a951d48b21c4696ae72df4bc4adef636e26","modified":1551086852921},{"_id":"public/lib/vazir-font/Vazir-Light.woff","hash":"32ae5c0d1d5943c8bb8e0f6ab07c3269c6f8b8a8","modified":1551086852921},{"_id":"public/lib/vazir-font/Vazir-Light.woff2","hash":"ef07a250766fea840c1049e67c0405d9216ee0a8","modified":1551086852921},{"_id":"public/lib/vazir-font/Vazir-Medium.woff","hash":"f5653059b2a5929516e4aab02329a978600b9b67","modified":1551086852922},{"_id":"public/lib/vazir-font/Vazir-Medium.woff2","hash":"668400ae92700965f03f2371faaee0ab8c8347c3","modified":1551086852922},{"_id":"public/lib/vazir-font/Vazir-Thin.woff2","hash":"c3be79b553ec394db71268d604b1d29183b867dc","modified":1551086852922},{"_id":"public/lib/vazir-font/Vazir.woff2","hash":"30ce165216db078951a690a6ad665b9b78f5dd81","modified":1551086852922},{"_id":"public/lib/vazir-font/Vazir-Thin.woff","hash":"ad4d46a99a1daf6353c86c79ac3a2b030213859c","modified":1551086852922},{"_id":"public/lib/vazir-font/Vazir.woff","hash":"bbee70033f0f5882e9869e417b69c6a38f56f187","modified":1551086852922},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"7b3f44b4d3028f3c87ddf0f4bd62511c9bf4a87e","modified":1551086852922},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"42ff503f20e97503cef8e5b2ec10ae07699d7c01","modified":1551086852922},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"d902f8db3e021155f177f698a252fb98d6e61768","modified":1551086852922},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"9784edb76f8a2ed595ea4bf74d46cda4eff3b303","modified":1551086852922},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"c140085833a38abec6b7df99d4ccac93eb266031","modified":1551086852922},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"92da6e3c7121e21cdfde25ef08797a3937a683e1","modified":1551086852922},{"_id":"public/lib/vazir-font/Vazir-Black.ttf","hash":"594dc3344ad14903c247615427d1009709f0f5a4","modified":1551086853149},{"_id":"public/lib/vazir-font/Vazir-Black.eot","hash":"13d026ff857c853cbd0dc519b6e58669db309441","modified":1551086853150},{"_id":"public/lib/vazir-font/Vazir-Bold.ttf","hash":"2e6c9df9f775373fb1988ae8529aa8f05313dae6","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir-Light.eot","hash":"3edffd7bb61eee8cd46b57225f9f9e5264e3362b","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir-Bold.eot","hash":"f76ec625e15522ff60d21f7a9a3b71c65bc27556","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir-Medium.eot","hash":"1f5a73db7947ef22c8a2bb19d6449b80496c03c4","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir-Light.ttf","hash":"9f1e2934098a6a4a7c5584c8f3fa24a707070da3","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir-Medium.ttf","hash":"295f7e02c9b157e7ea63ad09613b00ceab85c5cd","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir-Thin.eot","hash":"08e1503d1181188690fd9c81860d6c890c1465f6","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir-Thin.ttf","hash":"a6aa450ee6e0f85786474ca6b04827ef97e81af4","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir.eot","hash":"31a9219c25fe1991fb745ec8dbbcf45c6094a702","modified":1551086853151},{"_id":"public/lib/vazir-font/Vazir.ttf","hash":"f22b219824026e490a581ddb3b36b07997dff0e3","modified":1551086853152},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"19e302760e39e25a5f8d90d6cd0164ef6cd74f8c","modified":1551086853152},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"644ece8263d2f96b087eebf7f6d4e309e5898eb5","modified":1551086853152},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"80d33a73cbb60e206ef6f5c898988641576c7dda","modified":1551086853152},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"f9d835a0f9248b1bb33d66968e87c4a50103ed8d","modified":1551086853152},{"_id":"public/css/rtl.css","hash":"c2c2bc4ce311b3129275e009e903088b45e7ed77","modified":1551086853155},{"_id":"public/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1551086853155},{"_id":"public/js/search.js","hash":"a74d0c601f820160825a2e4ad13618074d714933","modified":1551086853156},{"_id":"public/lib/vazir-font/font-face.css","hash":"8f2bf6b59ae1f2ed4c2fead6cea4b8314fcf62e5","modified":1551086853156},{"_id":"public/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1551086853156},{"_id":"public/css/style.css","hash":"afadc8fd44cf214d65a970e9cec834e7953b0bbd","modified":1551086853156},{"_id":"public/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1551086853156},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"cf1a3fd771900af34f2af22142beecfb47367548","modified":1551086853156},{"_id":"public/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1551086853156},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"33e86c0ad6fb9c5c0c8c2af4cb2d790c6b14a8aa","modified":1551086853156},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"10740942ec6b3f4985529d343402d0bf32f9f847","modified":1551086853156},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"c445864a9646948e0d7ff44930ad732ee61427d8","modified":1551086853156},{"_id":"public/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1551086853160},{"_id":"public/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1551086853165},{"_id":"public/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1551086853165},{"_id":"public/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1551086853165},{"_id":"public/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1551086853168},{"_id":"public/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1551086853168},{"_id":"public/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1551086853169},{"_id":"public/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1551086853172},{"_id":"public/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1551086853172},{"_id":"public/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1551086853172},{"_id":"public/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1551086853173},{"_id":"public/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1551086853173},{"_id":"public/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1551086853174},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"b0bb9e6ac7709206b9510f1718516d89aead5b21","modified":1551086853179},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"ed6c1ed8f24df909f40fe5e5c652d7ff9570c821","modified":1551086853179}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2018-11-21T13:09:38.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-11-21 21:09:38\n---\n","updated":"2019-02-25T09:25:12.467Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjsk52ax50001ae3rrlppuh0y","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Nag","date":"2018-11-22T07:45:31.000Z","_content":"\n> [2018-12-07 10:31] 事业跟工作，真的是两码事\n\n> [2018-12-06 17:00] 员工和公司最牢固的只有雇佣关系\n\n> [2018-12-06 16:45] reddit真的是一个很牛逼的网站。\n\n> [2018-12-06 00:45] 所谓创新，其实并不复杂，这个时代，简单本身就是最好的创新。\n\n> [2018-12-06 00:40] 小说《去19号房间》里的妻子，发现自己出现了厌烦家庭生活的时刻。于是，便在房子里辟出了一个独处的房间，也跟家里人约定好这个空间只属于自己。但没多久，家人完全忘了这个约定，开始在这个房间里进进出出。后来这位妻子在宾馆里租了个房间作为个人私密空间，即使被误会外遇也不肯说出真相。其实每个人，都有属于自己的19号房间。再亲密的人也希望他能在门前止步，保持界限感。可往往很多人对界限感并没有清晰的认识，一不小心就越了界。\n\n> [2018-12-06 00:37] 社交的起因在于人们生活的单调和空虚。社交的需要驱使他们来到一起，但各自具有的许多令人厌憎的品行又驱使他们分开。\n\n> [2018-12-05 13:44] 影响力的另一个重要意义是，当他人认为你是（将成为）该领域的重要成员，他们才会愿意给与你机会或是资源。互联网行业人员流动性很大，往往今天对接的人明天离职就不知所踪了，这样的情况没有人原因付出太多精力和时间关注你的成长，更不可能给予你实际性的机会。让别人意识到，你会长久的呆在互联网行业，成为核心成员只是时间问题，大家就不会轻视你，并愿意在早期对你进行投资。\n\n> [2018-11-22 23:30] 可以！大功告成！:yum:\n\n> [2018-11-22 23:29] 试试倒序发布~\n\n> [2018-11-22 22:05] 终于把bot弄好了，以后可以直接在slack里发东西，bot就会自动将内容发布到git-pages上，然后顺便把代码push到git上。自动化的魅力真是太迷人了..\n\n> [2018.11.22 15.50] 测试一下。\n\n> [2018.11.22 15:48] 搞了个记录碎碎念的地方。\n\n\n\n\n","source":"nag/index.md","raw":"---\ntitle: Nag\ndate: 2018-11-22 15:45:31\n---\n\n> [2018-12-07 10:31] 事业跟工作，真的是两码事\n\n> [2018-12-06 17:00] 员工和公司最牢固的只有雇佣关系\n\n> [2018-12-06 16:45] reddit真的是一个很牛逼的网站。\n\n> [2018-12-06 00:45] 所谓创新，其实并不复杂，这个时代，简单本身就是最好的创新。\n\n> [2018-12-06 00:40] 小说《去19号房间》里的妻子，发现自己出现了厌烦家庭生活的时刻。于是，便在房子里辟出了一个独处的房间，也跟家里人约定好这个空间只属于自己。但没多久，家人完全忘了这个约定，开始在这个房间里进进出出。后来这位妻子在宾馆里租了个房间作为个人私密空间，即使被误会外遇也不肯说出真相。其实每个人，都有属于自己的19号房间。再亲密的人也希望他能在门前止步，保持界限感。可往往很多人对界限感并没有清晰的认识，一不小心就越了界。\n\n> [2018-12-06 00:37] 社交的起因在于人们生活的单调和空虚。社交的需要驱使他们来到一起，但各自具有的许多令人厌憎的品行又驱使他们分开。\n\n> [2018-12-05 13:44] 影响力的另一个重要意义是，当他人认为你是（将成为）该领域的重要成员，他们才会愿意给与你机会或是资源。互联网行业人员流动性很大，往往今天对接的人明天离职就不知所踪了，这样的情况没有人原因付出太多精力和时间关注你的成长，更不可能给予你实际性的机会。让别人意识到，你会长久的呆在互联网行业，成为核心成员只是时间问题，大家就不会轻视你，并愿意在早期对你进行投资。\n\n> [2018-11-22 23:30] 可以！大功告成！:yum:\n\n> [2018-11-22 23:29] 试试倒序发布~\n\n> [2018-11-22 22:05] 终于把bot弄好了，以后可以直接在slack里发东西，bot就会自动将内容发布到git-pages上，然后顺便把代码push到git上。自动化的魅力真是太迷人了..\n\n> [2018.11.22 15.50] 测试一下。\n\n> [2018.11.22 15:48] 搞了个记录碎碎念的地方。\n\n\n\n\n","updated":"2019-02-25T09:25:12.467Z","path":"nag/index.html","comments":1,"layout":"page","_id":"cjsk52ax90003ae3rg0g6wljq","content":"<blockquote>\n<p>[2018-12-07 10:31] 事业跟工作，真的是两码事</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 17:00] 员工和公司最牢固的只有雇佣关系</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 16:45] reddit真的是一个很牛逼的网站。</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 00:45] 所谓创新，其实并不复杂，这个时代，简单本身就是最好的创新。</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 00:40] 小说《去19号房间》里的妻子，发现自己出现了厌烦家庭生活的时刻。于是，便在房子里辟出了一个独处的房间，也跟家里人约定好这个空间只属于自己。但没多久，家人完全忘了这个约定，开始在这个房间里进进出出。后来这位妻子在宾馆里租了个房间作为个人私密空间，即使被误会外遇也不肯说出真相。其实每个人，都有属于自己的19号房间。再亲密的人也希望他能在门前止步，保持界限感。可往往很多人对界限感并没有清晰的认识，一不小心就越了界。</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 00:37] 社交的起因在于人们生活的单调和空虚。社交的需要驱使他们来到一起，但各自具有的许多令人厌憎的品行又驱使他们分开。</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-05 13:44] 影响力的另一个重要意义是，当他人认为你是（将成为）该领域的重要成员，他们才会愿意给与你机会或是资源。互联网行业人员流动性很大，往往今天对接的人明天离职就不知所踪了，这样的情况没有人原因付出太多精力和时间关注你的成长，更不可能给予你实际性的机会。让别人意识到，你会长久的呆在互联网行业，成为核心成员只是时间问题，大家就不会轻视你，并愿意在早期对你进行投资。</p>\n</blockquote>\n<blockquote>\n<p>[2018-11-22 23:30] 可以！大功告成！:yum:</p>\n</blockquote>\n<blockquote>\n<p>[2018-11-22 23:29] 试试倒序发布~</p>\n</blockquote>\n<blockquote>\n<p>[2018-11-22 22:05] 终于把bot弄好了，以后可以直接在slack里发东西，bot就会自动将内容发布到git-pages上，然后顺便把代码push到git上。自动化的魅力真是太迷人了..</p>\n</blockquote>\n<blockquote>\n<p>[2018.11.22 15.50] 测试一下。</p>\n</blockquote>\n<blockquote>\n<p>[2018.11.22 15:48] 搞了个记录碎碎念的地方。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>[2018-12-07 10:31] 事业跟工作，真的是两码事</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 17:00] 员工和公司最牢固的只有雇佣关系</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 16:45] reddit真的是一个很牛逼的网站。</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 00:45] 所谓创新，其实并不复杂，这个时代，简单本身就是最好的创新。</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 00:40] 小说《去19号房间》里的妻子，发现自己出现了厌烦家庭生活的时刻。于是，便在房子里辟出了一个独处的房间，也跟家里人约定好这个空间只属于自己。但没多久，家人完全忘了这个约定，开始在这个房间里进进出出。后来这位妻子在宾馆里租了个房间作为个人私密空间，即使被误会外遇也不肯说出真相。其实每个人，都有属于自己的19号房间。再亲密的人也希望他能在门前止步，保持界限感。可往往很多人对界限感并没有清晰的认识，一不小心就越了界。</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-06 00:37] 社交的起因在于人们生活的单调和空虚。社交的需要驱使他们来到一起，但各自具有的许多令人厌憎的品行又驱使他们分开。</p>\n</blockquote>\n<blockquote>\n<p>[2018-12-05 13:44] 影响力的另一个重要意义是，当他人认为你是（将成为）该领域的重要成员，他们才会愿意给与你机会或是资源。互联网行业人员流动性很大，往往今天对接的人明天离职就不知所踪了，这样的情况没有人原因付出太多精力和时间关注你的成长，更不可能给予你实际性的机会。让别人意识到，你会长久的呆在互联网行业，成为核心成员只是时间问题，大家就不会轻视你，并愿意在早期对你进行投资。</p>\n</blockquote>\n<blockquote>\n<p>[2018-11-22 23:30] 可以！大功告成！:yum:</p>\n</blockquote>\n<blockquote>\n<p>[2018-11-22 23:29] 试试倒序发布~</p>\n</blockquote>\n<blockquote>\n<p>[2018-11-22 22:05] 终于把bot弄好了，以后可以直接在slack里发东西，bot就会自动将内容发布到git-pages上，然后顺便把代码push到git上。自动化的魅力真是太迷人了..</p>\n</blockquote>\n<blockquote>\n<p>[2018.11.22 15.50] 测试一下。</p>\n</blockquote>\n<blockquote>\n<p>[2018.11.22 15:48] 搞了个记录碎碎念的地方。</p>\n</blockquote>\n"}],"Post":[{"title":"断点调试 autolayout","date":"2016-09-16T05:59:15.000Z","_content":"\n\n**对于 iOS 和 OS X 开发者来说，Autolayout已经逐渐变成一个至关重要的开发工具。它让多屏幕适配变得小菜一碟(peasy)，但是有些时候它还是会把我们搞疯掉，因为它总是会出现那些啰嗦又没啥用处的错误警告。**\n\n就像这样:\n\n```objc\nUnable to simultaneously satisfy constraints.\nProbably at least one of the constraints in the following list is one you don't want.\nTry this:\n\n(1) look at each constraint and try to figure out which you don't expect;\n(2) find the code that added the unwanted constraint or constraints and fix it.\n(Note: If you're seeing NSAutoresizingMaskLayoutConstraints that you don't understand, refer to the documentation for the UIView property translatesAutoresizingMaskIntoConstraints)\n\n(...........)\n\n\nMake a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.\nThe methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.\n```\n\n**这么长的错误日志！！！！尼玛让谁看！！！**  \n但是我们仔细看一下，观察 ```NSLayoutConstraint``` 部分。发现它倒数第二行还是有给我们点希望去解决这个错误的。在 ``` UIViewAlertForUnsatisfiableConstraints``` 添加一个Symbolic breakpoint 断点。  \n既然这样，我们就去试一下...  \n\n![](http://upload-images.jianshu.io/upload_images/56030-030886b7b8cca75d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) \n\n尼玛！！ 毛用都没有啊！！它停在了线程堆栈上，然而LLDB依旧一片黑暗...  \n\n**于是这里就有一个小技巧(Trick)，**来让你的symbolic breakpoint变得更加有用。为你的ObjC项目添加 ```po [[UIWindow keyWindow] _autolayoutTrace]``` \n   \n或者为你的Swift项目添加 ``` expr -l objc++ -O -- [[UIWindow keyWindow] _autolayoutTrace]```   \n\n![](http://upload-images.jianshu.io/upload_images/56030-b6505c77c0923c08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n现在你就会在命令控制台看到你的UIView 的层次结构还有出现错误的地方。\n  \n```objc\nUIWindow:0x7f9481c93360\n|   •UIView:0x7f9481c9d680\n|   |   *UIView:0x7f9481c9d990- AMBIGUOUS LAYOUT for UIView:0x7f9481c9d990.minX{id: 13}, UIView:0x7f9481c9d990.minY{id: 16}\n|   |   *_UILayoutGuide:0x7f9481c9e160- AMBIGUOUS LAYOUT for _UILayoutGuide:0x7f9481c9e160.minY{id: 17}\n|   |   *_UILayoutGuide:0x7f9481c9ebb0- AMBIGUOUS LAYOUT for _UILayoutGuide:0x7f9481c9ebb0.minY{id: 27}\n\n```\n\n**而当你在这个地方继续向下执行，它就会停在下一个你可能出现错误的地方。但是如果这样子你还是很难发现你的错误的话，你可以执行下面这个语句**\n\n```objc\n(lldb) e id $myView = (id) 0x7f9ea3d43410\n(lldb) e (void)[$myView setBackgroundColor:[UIColor blueColor]]\n```  \n\n**先获取UIView，然后改变它的背景色**\n\n你就会看到出错误的视图主动显示出来了~\n\n**ps: 如果是手写Autolayout，推荐 [Mansory](https://github.com/SnapKit/Masonry)，实在是好用！！**\n\n**关键是它的错误提示**  \n\n```objc\nUnable to simultaneously satisfy constraints......blah blah blah....\n(\n    \"<NSAutoresizingMaskLayoutConstraint:0x8887740 MASExampleDebuggingView:superview.height == 416>\",\n    \"<MASLayoutConstraint:ConstantConstraint UILabel:messageLabel.height >= 5000>\",\n    \"<MASLayoutConstraint:BottomConstraint UILabel:messageLabel.bottom == MASExampleDebuggingView:superview.bottom - 10>\",\n    \"<MASLayoutConstraint:ConflictingConstraint[0] UILabel:messageLabel.top == MASExampleDebuggingView:superview.top + 1>\"\n)\n\nWill attempt to recover by breaking constraint\n<MASLayoutConstraint:ConstantConstraint UILabel:messageLabel.height >= 5000>\n```\n\n已经把出现错误的约束显示出来了，完全不需要我们去茫茫去偶遇~\n\n\n\n\n","source":"_posts/breakpoint-debug-autolayout.md","raw":"---\ntitle: 断点调试 autolayout\ndate: 2016-09-16 13:59:15\ntags:\n- iOS\n---\n\n\n**对于 iOS 和 OS X 开发者来说，Autolayout已经逐渐变成一个至关重要的开发工具。它让多屏幕适配变得小菜一碟(peasy)，但是有些时候它还是会把我们搞疯掉，因为它总是会出现那些啰嗦又没啥用处的错误警告。**\n\n就像这样:\n\n```objc\nUnable to simultaneously satisfy constraints.\nProbably at least one of the constraints in the following list is one you don't want.\nTry this:\n\n(1) look at each constraint and try to figure out which you don't expect;\n(2) find the code that added the unwanted constraint or constraints and fix it.\n(Note: If you're seeing NSAutoresizingMaskLayoutConstraints that you don't understand, refer to the documentation for the UIView property translatesAutoresizingMaskIntoConstraints)\n\n(...........)\n\n\nMake a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.\nThe methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKit/UIView.h> may also be helpful.\n```\n\n**这么长的错误日志！！！！尼玛让谁看！！！**  \n但是我们仔细看一下，观察 ```NSLayoutConstraint``` 部分。发现它倒数第二行还是有给我们点希望去解决这个错误的。在 ``` UIViewAlertForUnsatisfiableConstraints``` 添加一个Symbolic breakpoint 断点。  \n既然这样，我们就去试一下...  \n\n![](http://upload-images.jianshu.io/upload_images/56030-030886b7b8cca75d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) \n\n尼玛！！ 毛用都没有啊！！它停在了线程堆栈上，然而LLDB依旧一片黑暗...  \n\n**于是这里就有一个小技巧(Trick)，**来让你的symbolic breakpoint变得更加有用。为你的ObjC项目添加 ```po [[UIWindow keyWindow] _autolayoutTrace]``` \n   \n或者为你的Swift项目添加 ``` expr -l objc++ -O -- [[UIWindow keyWindow] _autolayoutTrace]```   \n\n![](http://upload-images.jianshu.io/upload_images/56030-b6505c77c0923c08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n现在你就会在命令控制台看到你的UIView 的层次结构还有出现错误的地方。\n  \n```objc\nUIWindow:0x7f9481c93360\n|   •UIView:0x7f9481c9d680\n|   |   *UIView:0x7f9481c9d990- AMBIGUOUS LAYOUT for UIView:0x7f9481c9d990.minX{id: 13}, UIView:0x7f9481c9d990.minY{id: 16}\n|   |   *_UILayoutGuide:0x7f9481c9e160- AMBIGUOUS LAYOUT for _UILayoutGuide:0x7f9481c9e160.minY{id: 17}\n|   |   *_UILayoutGuide:0x7f9481c9ebb0- AMBIGUOUS LAYOUT for _UILayoutGuide:0x7f9481c9ebb0.minY{id: 27}\n\n```\n\n**而当你在这个地方继续向下执行，它就会停在下一个你可能出现错误的地方。但是如果这样子你还是很难发现你的错误的话，你可以执行下面这个语句**\n\n```objc\n(lldb) e id $myView = (id) 0x7f9ea3d43410\n(lldb) e (void)[$myView setBackgroundColor:[UIColor blueColor]]\n```  \n\n**先获取UIView，然后改变它的背景色**\n\n你就会看到出错误的视图主动显示出来了~\n\n**ps: 如果是手写Autolayout，推荐 [Mansory](https://github.com/SnapKit/Masonry)，实在是好用！！**\n\n**关键是它的错误提示**  \n\n```objc\nUnable to simultaneously satisfy constraints......blah blah blah....\n(\n    \"<NSAutoresizingMaskLayoutConstraint:0x8887740 MASExampleDebuggingView:superview.height == 416>\",\n    \"<MASLayoutConstraint:ConstantConstraint UILabel:messageLabel.height >= 5000>\",\n    \"<MASLayoutConstraint:BottomConstraint UILabel:messageLabel.bottom == MASExampleDebuggingView:superview.bottom - 10>\",\n    \"<MASLayoutConstraint:ConflictingConstraint[0] UILabel:messageLabel.top == MASExampleDebuggingView:superview.top + 1>\"\n)\n\nWill attempt to recover by breaking constraint\n<MASLayoutConstraint:ConstantConstraint UILabel:messageLabel.height >= 5000>\n```\n\n已经把出现错误的约束显示出来了，完全不需要我们去茫茫去偶遇~\n\n\n\n\n","slug":"breakpoint-debug-autolayout","published":1,"updated":"2019-02-25T09:25:12.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsk52ax10000ae3rv1ivhrsa","content":"<p><strong>对于 iOS 和 OS X 开发者来说，Autolayout已经逐渐变成一个至关重要的开发工具。它让多屏幕适配变得小菜一碟(peasy)，但是有些时候它还是会把我们搞疯掉，因为它总是会出现那些啰嗦又没啥用处的错误警告。</strong></p>\n<p>就像这样:</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to simultaneously satisfy constraints.</span><br><span class=\"line\">Probably at least one of the constraints in the following list is one you don't want.</span><br><span class=\"line\">Try <span class=\"keyword\">this</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">(1) look at each constraint and try to figure out which you don't expect;</span><br><span class=\"line\">(<span class=\"number\">2</span>) find the code that added the unwanted constraint or constraints and fix it.</span><br><span class=\"line\">(Note: If you're seeing NSAutoresizingMaskLayoutConstraints that you don't understand, refer to the documentation for the UIView property translatesAutoresizingMaskIntoConstraints)</span><br><span class=\"line\"></span><br><span class=\"line\">(...........)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Make a symbolic breakpoint at <span class=\"built_in\">UIViewAlertForUnsatisfiableConstraints</span> to catch <span class=\"keyword\">this</span> <span class=\"keyword\">in</span> the debugger.</span><br><span class=\"line\">The methods <span class=\"keyword\">in</span> the <span class=\"built_in\">UIConstraintBasedLayoutDebugging</span> category on <span class=\"built_in\">UIView</span> listed <span class=\"keyword\">in</span> &lt;<span class=\"built_in\">UIKit</span>/<span class=\"built_in\">UIView</span>.h&gt; may also be helpful.</span><br></pre></td></tr></table></figure>\n<p><strong>这么长的错误日志！！！！尼玛让谁看！！！</strong><br>但是我们仔细看一下，观察 <figure class=\"highlight plain\"><figcaption><span>部分。发现它倒数第二行还是有给我们点希望去解决这个错误的。在 ``` UIViewAlertForUnsatisfiableConstraints``` 添加一个Symbolic breakpoint 断点。  </span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">既然这样，我们就去试一下...  </span><br><span class=\"line\"></span><br><span class=\"line\">![](http://upload-images.jianshu.io/upload_images/56030-030886b7b8cca75d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) </span><br><span class=\"line\"></span><br><span class=\"line\">尼玛！！ 毛用都没有啊！！它停在了线程堆栈上，然而LLDB依旧一片黑暗...  </span><br><span class=\"line\"></span><br><span class=\"line\">**于是这里就有一个小技巧(Trick)，**来让你的symbolic breakpoint变得更加有用。为你的ObjC项目添加 ```po [[UIWindow keyWindow] _autolayoutTrace]``` </span><br><span class=\"line\">   </span><br><span class=\"line\">或者为你的Swift项目添加 ``` expr -l objc++ -O -- [[UIWindow keyWindow] _autolayoutTrace]```   </span><br><span class=\"line\"></span><br><span class=\"line\">![](http://upload-images.jianshu.io/upload_images/56030-b6505c77c0923c08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class=\"line\"></span><br><span class=\"line\">现在你就会在命令控制台看到你的UIView 的层次结构还有出现错误的地方。</span><br><span class=\"line\">  </span><br><span class=\"line\">```objc</span><br><span class=\"line\">UIWindow:0x7f9481c93360</span><br><span class=\"line\">|   •UIView:0x7f9481c9d680</span><br><span class=\"line\">|   |   *UIView:0x7f9481c9d990- AMBIGUOUS LAYOUT for UIView:0x7f9481c9d990.minX&#123;id: 13&#125;, UIView:0x7f9481c9d990.minY&#123;id: 16&#125;</span><br><span class=\"line\">|   |   *_UILayoutGuide:0x7f9481c9e160- AMBIGUOUS LAYOUT for _UILayoutGuide:0x7f9481c9e160.minY&#123;id: 17&#125;</span><br><span class=\"line\">|   |   *_UILayoutGuide:0x7f9481c9ebb0- AMBIGUOUS LAYOUT for _UILayoutGuide:0x7f9481c9ebb0.minY&#123;id: 27&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>而当你在这个地方继续向下执行，它就会停在下一个你可能出现错误的地方。但是如果这样子你还是很难发现你的错误的话，你可以执行下面这个语句</strong></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(lldb) e <span class=\"keyword\">id</span> $myView = (<span class=\"keyword\">id</span>) <span class=\"number\">0x7f9ea3d43410</span></span><br><span class=\"line\">(lldb) e (<span class=\"keyword\">void</span>)[$myView setBackgroundColor:[<span class=\"built_in\">UIColor</span> blueColor]]</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">**先获取<span class=\"built_in\">UIView</span>，然后改变它的背景色**</span><br><span class=\"line\"></span><br><span class=\"line\">你就会看到出错误的视图主动显示出来了~</span><br><span class=\"line\"></span><br><span class=\"line\">**ps: 如果是手写Autolayout，推荐 [Mansory](https:<span class=\"comment\">//github.com/SnapKit/Masonry)，实在是好用！！**</span></span><br><span class=\"line\"></span><br><span class=\"line\">**关键是它的错误提示**  </span><br><span class=\"line\"></span><br><span class=\"line\">```objc</span><br><span class=\"line\">Unable to simultaneously satisfy constraints......blah blah blah....</span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"string\">\"&lt;NSAutoresizingMaskLayoutConstraint:0x8887740 MASExampleDebuggingView:superview.height == 416&gt;\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"&lt;MASLayoutConstraint:ConstantConstraint UILabel:messageLabel.height &gt;= 5000&gt;\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"&lt;MASLayoutConstraint:BottomConstraint UILabel:messageLabel.bottom == MASExampleDebuggingView:superview.bottom - 10&gt;\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"&lt;MASLayoutConstraint:ConflictingConstraint[0] UILabel:messageLabel.top == MASExampleDebuggingView:superview.top + 1&gt;\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">Will attempt to recover by breaking constraint</span><br><span class=\"line\">&lt;MASLayoutConstraint:ConstantConstraint <span class=\"built_in\">UILabel</span>:messageLabel.height &gt;= <span class=\"number\">5000</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>已经把出现错误的约束显示出来了，完全不需要我们去茫茫去偶遇~</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>对于 iOS 和 OS X 开发者来说，Autolayout已经逐渐变成一个至关重要的开发工具。它让多屏幕适配变得小菜一碟(peasy)，但是有些时候它还是会把我们搞疯掉，因为它总是会出现那些啰嗦又没啥用处的错误警告。</strong></p>\n<p>就像这样:</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to simultaneously satisfy constraints.</span><br><span class=\"line\">Probably at least one of the constraints in the following list is one you don't want.</span><br><span class=\"line\">Try <span class=\"keyword\">this</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">(1) look at each constraint and try to figure out which you don't expect;</span><br><span class=\"line\">(<span class=\"number\">2</span>) find the code that added the unwanted constraint or constraints and fix it.</span><br><span class=\"line\">(Note: If you're seeing NSAutoresizingMaskLayoutConstraints that you don't understand, refer to the documentation for the UIView property translatesAutoresizingMaskIntoConstraints)</span><br><span class=\"line\"></span><br><span class=\"line\">(...........)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Make a symbolic breakpoint at <span class=\"built_in\">UIViewAlertForUnsatisfiableConstraints</span> to catch <span class=\"keyword\">this</span> <span class=\"keyword\">in</span> the debugger.</span><br><span class=\"line\">The methods <span class=\"keyword\">in</span> the <span class=\"built_in\">UIConstraintBasedLayoutDebugging</span> category on <span class=\"built_in\">UIView</span> listed <span class=\"keyword\">in</span> &lt;<span class=\"built_in\">UIKit</span>/<span class=\"built_in\">UIView</span>.h&gt; may also be helpful.</span><br></pre></td></tr></table></figure>\n<p><strong>这么长的错误日志！！！！尼玛让谁看！！！</strong><br>但是我们仔细看一下，观察 <figure class=\"highlight plain\"><figcaption><span>部分。发现它倒数第二行还是有给我们点希望去解决这个错误的。在 ``` UIViewAlertForUnsatisfiableConstraints``` 添加一个Symbolic breakpoint 断点。  </span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">既然这样，我们就去试一下...  </span><br><span class=\"line\"></span><br><span class=\"line\">![](http://upload-images.jianshu.io/upload_images/56030-030886b7b8cca75d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) </span><br><span class=\"line\"></span><br><span class=\"line\">尼玛！！ 毛用都没有啊！！它停在了线程堆栈上，然而LLDB依旧一片黑暗...  </span><br><span class=\"line\"></span><br><span class=\"line\">**于是这里就有一个小技巧(Trick)，**来让你的symbolic breakpoint变得更加有用。为你的ObjC项目添加 ```po [[UIWindow keyWindow] _autolayoutTrace]``` </span><br><span class=\"line\">   </span><br><span class=\"line\">或者为你的Swift项目添加 ``` expr -l objc++ -O -- [[UIWindow keyWindow] _autolayoutTrace]```   </span><br><span class=\"line\"></span><br><span class=\"line\">![](http://upload-images.jianshu.io/upload_images/56030-b6505c77c0923c08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class=\"line\"></span><br><span class=\"line\">现在你就会在命令控制台看到你的UIView 的层次结构还有出现错误的地方。</span><br><span class=\"line\">  </span><br><span class=\"line\">```objc</span><br><span class=\"line\">UIWindow:0x7f9481c93360</span><br><span class=\"line\">|   •UIView:0x7f9481c9d680</span><br><span class=\"line\">|   |   *UIView:0x7f9481c9d990- AMBIGUOUS LAYOUT for UIView:0x7f9481c9d990.minX&#123;id: 13&#125;, UIView:0x7f9481c9d990.minY&#123;id: 16&#125;</span><br><span class=\"line\">|   |   *_UILayoutGuide:0x7f9481c9e160- AMBIGUOUS LAYOUT for _UILayoutGuide:0x7f9481c9e160.minY&#123;id: 17&#125;</span><br><span class=\"line\">|   |   *_UILayoutGuide:0x7f9481c9ebb0- AMBIGUOUS LAYOUT for _UILayoutGuide:0x7f9481c9ebb0.minY&#123;id: 27&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>而当你在这个地方继续向下执行，它就会停在下一个你可能出现错误的地方。但是如果这样子你还是很难发现你的错误的话，你可以执行下面这个语句</strong></p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(lldb) e <span class=\"keyword\">id</span> $myView = (<span class=\"keyword\">id</span>) <span class=\"number\">0x7f9ea3d43410</span></span><br><span class=\"line\">(lldb) e (<span class=\"keyword\">void</span>)[$myView setBackgroundColor:[<span class=\"built_in\">UIColor</span> blueColor]]</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">**先获取<span class=\"built_in\">UIView</span>，然后改变它的背景色**</span><br><span class=\"line\"></span><br><span class=\"line\">你就会看到出错误的视图主动显示出来了~</span><br><span class=\"line\"></span><br><span class=\"line\">**ps: 如果是手写Autolayout，推荐 [Mansory](https:<span class=\"comment\">//github.com/SnapKit/Masonry)，实在是好用！！**</span></span><br><span class=\"line\"></span><br><span class=\"line\">**关键是它的错误提示**  </span><br><span class=\"line\"></span><br><span class=\"line\">```objc</span><br><span class=\"line\">Unable to simultaneously satisfy constraints......blah blah blah....</span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"string\">\"&lt;NSAutoresizingMaskLayoutConstraint:0x8887740 MASExampleDebuggingView:superview.height == 416&gt;\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"&lt;MASLayoutConstraint:ConstantConstraint UILabel:messageLabel.height &gt;= 5000&gt;\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"&lt;MASLayoutConstraint:BottomConstraint UILabel:messageLabel.bottom == MASExampleDebuggingView:superview.bottom - 10&gt;\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"&lt;MASLayoutConstraint:ConflictingConstraint[0] UILabel:messageLabel.top == MASExampleDebuggingView:superview.top + 1&gt;\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">Will attempt to recover by breaking constraint</span><br><span class=\"line\">&lt;MASLayoutConstraint:ConstantConstraint <span class=\"built_in\">UILabel</span>:messageLabel.height &gt;= <span class=\"number\">5000</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>已经把出现错误的约束显示出来了，完全不需要我们去茫茫去偶遇~</p>\n"},{"title":"一次使用Python遇到的环境问题备忘","date":"2019-02-25T07:57:53.000Z","_content":"\n这两天在倒腾用Python写个接口，遇到一些问题，特此做下记录备忘，方便后面查阅。\n\n### Error0\n\n> InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL\nappropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n\n这是因为我服务器上的Python版本太低了，如果Python版本低于2.7.9之前的话，就会有这个错误提示，因为2.7.9之前的Python提供的SSL环境不是很安全。\n\n所以理所当然我们就要升级Python的版本了。\n\n### Install Python3.7\n\n`cat /etc/redhat-release`\n\n看了一眼系统是 `CentOS 6`\n\n于是先使用yum安装环境依赖。\n\n```python\n# wget 用于下载源码包\n# gcc 和 make 用于编译\nyum install wget gcc make\n\n#make报错，Python 有个很重要的内建模块 zipimport 用于从 Zip 压缩包中导入模块\n#zipimport.ZipImportError: can't decompress data; zlib not available\nyum install zlib-devel\n\n#make install报错，\n#ModuleNotFoundError: No module named ‘_ctypes’\nyum install libffi-devel\n\n# 解决 import ssl 报错 No module named '_ssl'\nyum install openssl-devel\n\n# 解决 import bz2 报错\nyum install  bzip2-devel\n\n# 解决 import curses 报错\nyum install  ncurses-devel\n\n# 解决 import sqlite3 报错\nyum install sqlite-devel\n\n# 解决 _dbm _gdbm 缺失提醒\nyum install gdbm-devel\n\n# 解决 _lzma 缺失提醒\nyum install xz-devel\n\n# 解决 _tkinter 缺失提醒\nyum install tk-devel\n\n# 解决 readline 缺失提醒及方向键行为非预期的问题\nyum install readline-devel\n```\n\n然后下载源码包\n\n`wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz`\n\n解压缩\n\n```\nxz -d Python-3.7.1.tar.xz\ntar -xvf Python-3.7.1.tar\n```\n\n编译&安装\n\n```\ncd Python-3.7.1\n#--prefix 是预期安装目录，--enable-optimizations 是优化选项（LTO，PGO 等）\n./configure --prefix=/usr/local/python3.7 --enable-optimizations\n# 安装\nmake && make install\n```\n\n添加软链接\n\n```\nln -s /usr/local/python3.7/bin/python3.7 /usr/bin/python3\nln -s /usr/local/python3.7/bin/pip3.7 /usr/bin/pip3\n```\n\n这样子应该一切就搞定啦。\n然而，事情好像没有那么简单。\n\n当我尝试使用 `pip3 install flask` 的时候，报错。\n\n### Error1\n\n> pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.\n\n前边说过，我的服务器系统是CentOS 6，默认的OpenSSL版本是1.0.1，而Python3.7需要OpenSSL1.0.2或者1.1.x才行，于是我们需要对OpenSSL进行升级并且重新编辑Pyton3.7。\n\n### 升级OpenSSL\n\n下载最新版的OpenSSL\n\n`wget https://www.openssl.org/source/openssl-1.1.1-pre8.tar.gz`\n\n编译&安装\n\n```\ncd openssl-1.1.1-pre8\n./config --prefix=/usr/local/openssl no-zlib #不需要zlib\nmake & make install\n```\n\n备份原配置\n\n```\nmv /usr/bin/openssl /usr/bin/openssl.bak\nmv /usr/include/openssl/ /usr/include/openssl.bak\n```\n\n添加软链接\n\n```\nln -s /usr/local/openssl/include/openssl /usr/include/openssl\nln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so\nln -s /usr/local/openssl/bin/openssl /usr/bin/openssl\n```\n\n修改系统配置\n\n```\n#写入openssl库文件的搜索路径\necho \"/usr/local/openssl/lib\" >> /etc/ld.so.conf\n#使修改后的/etc/ld.so.conf生效 \nldconfig -v\n```\n\n重新编译Python3.7\n\n```\ncd Python-3.7.1\n#--prefix 是预期安装目录，--enable-optimizations 是优化选项（LTO，PGO 等）\n./configure --prefix=/usr/local/python3.7 --enable-optimizations  --with-openssl=/usr/local/openssl\n# 安装\nmake && make install\n```\n\n\n**至此，所有问题都解决了。感想：Linux里的相关环境配置，真是一门大学问啊**\n\n","source":"_posts/python-backend-memo.md","raw":"---\ntitle: 一次使用Python遇到的环境问题备忘\ndate: 2019-02-25 15:57:53\ntags: \n- Python\n- Flask\n- OpenSSL\n- Linux\n---\n\n这两天在倒腾用Python写个接口，遇到一些问题，特此做下记录备忘，方便后面查阅。\n\n### Error0\n\n> InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL\nappropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n\n这是因为我服务器上的Python版本太低了，如果Python版本低于2.7.9之前的话，就会有这个错误提示，因为2.7.9之前的Python提供的SSL环境不是很安全。\n\n所以理所当然我们就要升级Python的版本了。\n\n### Install Python3.7\n\n`cat /etc/redhat-release`\n\n看了一眼系统是 `CentOS 6`\n\n于是先使用yum安装环境依赖。\n\n```python\n# wget 用于下载源码包\n# gcc 和 make 用于编译\nyum install wget gcc make\n\n#make报错，Python 有个很重要的内建模块 zipimport 用于从 Zip 压缩包中导入模块\n#zipimport.ZipImportError: can't decompress data; zlib not available\nyum install zlib-devel\n\n#make install报错，\n#ModuleNotFoundError: No module named ‘_ctypes’\nyum install libffi-devel\n\n# 解决 import ssl 报错 No module named '_ssl'\nyum install openssl-devel\n\n# 解决 import bz2 报错\nyum install  bzip2-devel\n\n# 解决 import curses 报错\nyum install  ncurses-devel\n\n# 解决 import sqlite3 报错\nyum install sqlite-devel\n\n# 解决 _dbm _gdbm 缺失提醒\nyum install gdbm-devel\n\n# 解决 _lzma 缺失提醒\nyum install xz-devel\n\n# 解决 _tkinter 缺失提醒\nyum install tk-devel\n\n# 解决 readline 缺失提醒及方向键行为非预期的问题\nyum install readline-devel\n```\n\n然后下载源码包\n\n`wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz`\n\n解压缩\n\n```\nxz -d Python-3.7.1.tar.xz\ntar -xvf Python-3.7.1.tar\n```\n\n编译&安装\n\n```\ncd Python-3.7.1\n#--prefix 是预期安装目录，--enable-optimizations 是优化选项（LTO，PGO 等）\n./configure --prefix=/usr/local/python3.7 --enable-optimizations\n# 安装\nmake && make install\n```\n\n添加软链接\n\n```\nln -s /usr/local/python3.7/bin/python3.7 /usr/bin/python3\nln -s /usr/local/python3.7/bin/pip3.7 /usr/bin/pip3\n```\n\n这样子应该一切就搞定啦。\n然而，事情好像没有那么简单。\n\n当我尝试使用 `pip3 install flask` 的时候，报错。\n\n### Error1\n\n> pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.\n\n前边说过，我的服务器系统是CentOS 6，默认的OpenSSL版本是1.0.1，而Python3.7需要OpenSSL1.0.2或者1.1.x才行，于是我们需要对OpenSSL进行升级并且重新编辑Pyton3.7。\n\n### 升级OpenSSL\n\n下载最新版的OpenSSL\n\n`wget https://www.openssl.org/source/openssl-1.1.1-pre8.tar.gz`\n\n编译&安装\n\n```\ncd openssl-1.1.1-pre8\n./config --prefix=/usr/local/openssl no-zlib #不需要zlib\nmake & make install\n```\n\n备份原配置\n\n```\nmv /usr/bin/openssl /usr/bin/openssl.bak\nmv /usr/include/openssl/ /usr/include/openssl.bak\n```\n\n添加软链接\n\n```\nln -s /usr/local/openssl/include/openssl /usr/include/openssl\nln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so\nln -s /usr/local/openssl/bin/openssl /usr/bin/openssl\n```\n\n修改系统配置\n\n```\n#写入openssl库文件的搜索路径\necho \"/usr/local/openssl/lib\" >> /etc/ld.so.conf\n#使修改后的/etc/ld.so.conf生效 \nldconfig -v\n```\n\n重新编译Python3.7\n\n```\ncd Python-3.7.1\n#--prefix 是预期安装目录，--enable-optimizations 是优化选项（LTO，PGO 等）\n./configure --prefix=/usr/local/python3.7 --enable-optimizations  --with-openssl=/usr/local/openssl\n# 安装\nmake && make install\n```\n\n\n**至此，所有问题都解决了。感想：Linux里的相关环境配置，真是一门大学问啊**\n\n","slug":"python-backend-memo","published":1,"updated":"2019-02-25T09:27:21.934Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsk52ax70002ae3r4s3h9u88","content":"<p>这两天在倒腾用Python写个接口，遇到一些问题，特此做下记录备忘，方便后面查阅。</p>\n<h3 id=\"Error0\"><a href=\"#Error0\" class=\"headerlink\" title=\"Error0\"></a>Error0</h3><blockquote>\n<p>InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL<br>appropriately and may cause certain SSL connections to fail. For more information, see <a href=\"https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning\" target=\"_blank\" rel=\"noopener\">https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning</a>.</p>\n</blockquote>\n<p>这是因为我服务器上的Python版本太低了，如果Python版本低于2.7.9之前的话，就会有这个错误提示，因为2.7.9之前的Python提供的SSL环境不是很安全。</p>\n<p>所以理所当然我们就要升级Python的版本了。</p>\n<h3 id=\"Install-Python3-7\"><a href=\"#Install-Python3-7\" class=\"headerlink\" title=\"Install Python3.7\"></a>Install Python3.7</h3><p><code>cat /etc/redhat-release</code></p>\n<p>看了一眼系统是 <code>CentOS 6</code></p>\n<p>于是先使用yum安装环境依赖。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># wget 用于下载源码包</span></span><br><span class=\"line\"><span class=\"comment\"># gcc 和 make 用于编译</span></span><br><span class=\"line\">yum install wget gcc make</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#make报错，Python 有个很重要的内建模块 zipimport 用于从 Zip 压缩包中导入模块</span></span><br><span class=\"line\"><span class=\"comment\">#zipimport.ZipImportError: can't decompress data; zlib not available</span></span><br><span class=\"line\">yum install zlib-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#make install报错，</span></span><br><span class=\"line\"><span class=\"comment\">#ModuleNotFoundError: No module named ‘_ctypes’</span></span><br><span class=\"line\">yum install libffi-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 import ssl 报错 No module named '_ssl'</span></span><br><span class=\"line\">yum install openssl-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 import bz2 报错</span></span><br><span class=\"line\">yum install  bzip2-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 import curses 报错</span></span><br><span class=\"line\">yum install  ncurses-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 import sqlite3 报错</span></span><br><span class=\"line\">yum install sqlite-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 _dbm _gdbm 缺失提醒</span></span><br><span class=\"line\">yum install gdbm-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 _lzma 缺失提醒</span></span><br><span class=\"line\">yum install xz-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 _tkinter 缺失提醒</span></span><br><span class=\"line\">yum install tk-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 readline 缺失提醒及方向键行为非预期的问题</span></span><br><span class=\"line\">yum install readline-devel</span><br></pre></td></tr></table></figure>\n<p>然后下载源码包</p>\n<p><code>wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz</code></p>\n<p>解压缩</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xz -d Python-3.7.1.tar.xz</span><br><span class=\"line\">tar -xvf Python-3.7.1.tar</span><br></pre></td></tr></table></figure>\n<p>编译&amp;安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd Python-3.7.1</span><br><span class=\"line\">#--prefix 是预期安装目录，--enable-optimizations 是优化选项（LTO，PGO 等）</span><br><span class=\"line\">./configure --prefix=/usr/local/python3.7 --enable-optimizations</span><br><span class=\"line\"># 安装</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p>添加软链接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /usr/local/python3.7/bin/python3.7 /usr/bin/python3</span><br><span class=\"line\">ln -s /usr/local/python3.7/bin/pip3.7 /usr/bin/pip3</span><br></pre></td></tr></table></figure>\n<p>这样子应该一切就搞定啦。<br>然而，事情好像没有那么简单。</p>\n<p>当我尝试使用 <code>pip3 install flask</code> 的时候，报错。</p>\n<h3 id=\"Error1\"><a href=\"#Error1\" class=\"headerlink\" title=\"Error1\"></a>Error1</h3><blockquote>\n<p>pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.</p>\n</blockquote>\n<p>前边说过，我的服务器系统是CentOS 6，默认的OpenSSL版本是1.0.1，而Python3.7需要OpenSSL1.0.2或者1.1.x才行，于是我们需要对OpenSSL进行升级并且重新编辑Pyton3.7。</p>\n<h3 id=\"升级OpenSSL\"><a href=\"#升级OpenSSL\" class=\"headerlink\" title=\"升级OpenSSL\"></a>升级OpenSSL</h3><p>下载最新版的OpenSSL</p>\n<p><code>wget https://www.openssl.org/source/openssl-1.1.1-pre8.tar.gz</code></p>\n<p>编译&amp;安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd openssl-1.1.1-pre8</span><br><span class=\"line\">./config --prefix=/usr/local/openssl no-zlib #不需要zlib</span><br><span class=\"line\">make &amp; make install</span><br></pre></td></tr></table></figure>\n<p>备份原配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /usr/bin/openssl /usr/bin/openssl.bak</span><br><span class=\"line\">mv /usr/include/openssl/ /usr/include/openssl.bak</span><br></pre></td></tr></table></figure>\n<p>添加软链接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /usr/local/openssl/include/openssl /usr/include/openssl</span><br><span class=\"line\">ln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so</span><br><span class=\"line\">ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl</span><br></pre></td></tr></table></figure>\n<p>修改系统配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#写入openssl库文件的搜索路径</span><br><span class=\"line\">echo &quot;/usr/local/openssl/lib&quot; &gt;&gt; /etc/ld.so.conf</span><br><span class=\"line\">#使修改后的/etc/ld.so.conf生效 </span><br><span class=\"line\">ldconfig -v</span><br></pre></td></tr></table></figure>\n<p>重新编译Python3.7</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd Python-3.7.1</span><br><span class=\"line\">#--prefix 是预期安装目录，--enable-optimizations 是优化选项（LTO，PGO 等）</span><br><span class=\"line\">./configure --prefix=/usr/local/python3.7 --enable-optimizations  --with-openssl=/usr/local/openssl</span><br><span class=\"line\"># 安装</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p><strong>至此，所有问题都解决了。感想：Linux里的相关环境配置，真是一门大学问啊</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>这两天在倒腾用Python写个接口，遇到一些问题，特此做下记录备忘，方便后面查阅。</p>\n<h3 id=\"Error0\"><a href=\"#Error0\" class=\"headerlink\" title=\"Error0\"></a>Error0</h3><blockquote>\n<p>InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL<br>appropriately and may cause certain SSL connections to fail. For more information, see <a href=\"https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning\" target=\"_blank\" rel=\"noopener\">https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning</a>.</p>\n</blockquote>\n<p>这是因为我服务器上的Python版本太低了，如果Python版本低于2.7.9之前的话，就会有这个错误提示，因为2.7.9之前的Python提供的SSL环境不是很安全。</p>\n<p>所以理所当然我们就要升级Python的版本了。</p>\n<h3 id=\"Install-Python3-7\"><a href=\"#Install-Python3-7\" class=\"headerlink\" title=\"Install Python3.7\"></a>Install Python3.7</h3><p><code>cat /etc/redhat-release</code></p>\n<p>看了一眼系统是 <code>CentOS 6</code></p>\n<p>于是先使用yum安装环境依赖。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># wget 用于下载源码包</span></span><br><span class=\"line\"><span class=\"comment\"># gcc 和 make 用于编译</span></span><br><span class=\"line\">yum install wget gcc make</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#make报错，Python 有个很重要的内建模块 zipimport 用于从 Zip 压缩包中导入模块</span></span><br><span class=\"line\"><span class=\"comment\">#zipimport.ZipImportError: can't decompress data; zlib not available</span></span><br><span class=\"line\">yum install zlib-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#make install报错，</span></span><br><span class=\"line\"><span class=\"comment\">#ModuleNotFoundError: No module named ‘_ctypes’</span></span><br><span class=\"line\">yum install libffi-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 import ssl 报错 No module named '_ssl'</span></span><br><span class=\"line\">yum install openssl-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 import bz2 报错</span></span><br><span class=\"line\">yum install  bzip2-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 import curses 报错</span></span><br><span class=\"line\">yum install  ncurses-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 import sqlite3 报错</span></span><br><span class=\"line\">yum install sqlite-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 _dbm _gdbm 缺失提醒</span></span><br><span class=\"line\">yum install gdbm-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 _lzma 缺失提醒</span></span><br><span class=\"line\">yum install xz-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 _tkinter 缺失提醒</span></span><br><span class=\"line\">yum install tk-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决 readline 缺失提醒及方向键行为非预期的问题</span></span><br><span class=\"line\">yum install readline-devel</span><br></pre></td></tr></table></figure>\n<p>然后下载源码包</p>\n<p><code>wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz</code></p>\n<p>解压缩</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xz -d Python-3.7.1.tar.xz</span><br><span class=\"line\">tar -xvf Python-3.7.1.tar</span><br></pre></td></tr></table></figure>\n<p>编译&amp;安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd Python-3.7.1</span><br><span class=\"line\">#--prefix 是预期安装目录，--enable-optimizations 是优化选项（LTO，PGO 等）</span><br><span class=\"line\">./configure --prefix=/usr/local/python3.7 --enable-optimizations</span><br><span class=\"line\"># 安装</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p>添加软链接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /usr/local/python3.7/bin/python3.7 /usr/bin/python3</span><br><span class=\"line\">ln -s /usr/local/python3.7/bin/pip3.7 /usr/bin/pip3</span><br></pre></td></tr></table></figure>\n<p>这样子应该一切就搞定啦。<br>然而，事情好像没有那么简单。</p>\n<p>当我尝试使用 <code>pip3 install flask</code> 的时候，报错。</p>\n<h3 id=\"Error1\"><a href=\"#Error1\" class=\"headerlink\" title=\"Error1\"></a>Error1</h3><blockquote>\n<p>pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.</p>\n</blockquote>\n<p>前边说过，我的服务器系统是CentOS 6，默认的OpenSSL版本是1.0.1，而Python3.7需要OpenSSL1.0.2或者1.1.x才行，于是我们需要对OpenSSL进行升级并且重新编辑Pyton3.7。</p>\n<h3 id=\"升级OpenSSL\"><a href=\"#升级OpenSSL\" class=\"headerlink\" title=\"升级OpenSSL\"></a>升级OpenSSL</h3><p>下载最新版的OpenSSL</p>\n<p><code>wget https://www.openssl.org/source/openssl-1.1.1-pre8.tar.gz</code></p>\n<p>编译&amp;安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd openssl-1.1.1-pre8</span><br><span class=\"line\">./config --prefix=/usr/local/openssl no-zlib #不需要zlib</span><br><span class=\"line\">make &amp; make install</span><br></pre></td></tr></table></figure>\n<p>备份原配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /usr/bin/openssl /usr/bin/openssl.bak</span><br><span class=\"line\">mv /usr/include/openssl/ /usr/include/openssl.bak</span><br></pre></td></tr></table></figure>\n<p>添加软链接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /usr/local/openssl/include/openssl /usr/include/openssl</span><br><span class=\"line\">ln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so</span><br><span class=\"line\">ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl</span><br></pre></td></tr></table></figure>\n<p>修改系统配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#写入openssl库文件的搜索路径</span><br><span class=\"line\">echo &quot;/usr/local/openssl/lib&quot; &gt;&gt; /etc/ld.so.conf</span><br><span class=\"line\">#使修改后的/etc/ld.so.conf生效 </span><br><span class=\"line\">ldconfig -v</span><br></pre></td></tr></table></figure>\n<p>重新编译Python3.7</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd Python-3.7.1</span><br><span class=\"line\">#--prefix 是预期安装目录，--enable-optimizations 是优化选项（LTO，PGO 等）</span><br><span class=\"line\">./configure --prefix=/usr/local/python3.7 --enable-optimizations  --with-openssl=/usr/local/openssl</span><br><span class=\"line\"># 安装</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p><strong>至此，所有问题都解决了。感想：Linux里的相关环境配置，真是一门大学问啊</strong></p>\n"},{"title":"与Cocoapods抗战的一天","date":"2018-05-22T14:43:54.000Z","_content":"\n> 在升级Mac系统到macOS High Sierra（10.13.4）的时候，出现升级失败导致开不了机，所有的数据全没了。\n> 🌶🐔🍎💊\n> 之前的系统环境都要全部重新配置，在配置cocoapods的时候遇到了一些问题，特此记录。\n\n## 安装cocoapods依赖的环境\n\n这步网上有很多[教程](https://www.google.com.hk/search?q=%E5%AE%89%E8%A3%85cocoapods&oq=%E5%AE%89%E8%A3%85cocoapods&aqs=chrome..69i57j69i61j0.3420j0j4&sourceid=chrome&ie=UTF-8)，就不再赘述。\n然而安装完后，在执行 `pod install` 或 `pod update` 时，就会出现如下错误：\n\n```\nArgumentError - Malformed version number string\n/Library/Ruby/Site/2.3.0/rubygems/version.rb:209:in `initialize'\n/Library/Ruby/Site/2.3.0/rubygems/version.rb:200:in `new'\n/Library/Ruby/Site/2.3.0/rubygems/version.rb:200:in `new'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:123:in `embedded_content_settings'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:68:in `generate'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:39:in `save_as'\n...\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/installer.rb:183:in `generate_pods_project'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/installer.rb:119:in `install!'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/command/install.rb:41:in `run'\n/Library/Ruby/Gems/2.3.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/command.rb:52:in `run'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/bin/pod:55:in `<top (required)>'\n/usr/bin/pod:23:in `load'\n/usr/bin/pod:23:in `<main>'\n```\n\n（一脸懵逼...）\n\nGoogle搜了一堆也没找到解决办法，后来在Cocoapods的issues里找到[一个解决方案](https://github.com/CocoaPods/CocoaPods/issues/7756):\n\n> jcharr1: I came across this issue today, too, when trying to run \"pod install.\" What version of Rubygems are you running? For me, I had updated with `gem update --system` which brought me up to v2.7.7. Downgrading to 2.7.6 with `gem update --system 2.7.6` fixed this for me.\n\n这位 `jcharr1` 说gem版本太高了导致的，他降级到2.7.6就可以了。于是我也尝试着降级了一下，果然解决了！不过其中缘由不得而知，有时间再研究一下。\n\n## Pod install\n\n现在可以正常 `pod install` 和 `pod update` 了吗？并不。\n当我按下回车键之后，又出现了一个小问题：\n\n```\nAnalyzing dependencies\nPre-downloading: `XXXX` from `http://xxx.com/xxx/xxx.git`, tag `xxx_6.9.5`\nUsername for 'http://xxx.com': aaa\nPassword for 'http://aaa@xxx.com':\n```\n\n其实这个输入账号密码就能解决问题了，但是我比较好奇的是我已经有添加了 `SSH Key`，为什么还会要我输入账号密码呢？原来，当我们的pod组件的地址使用的是 `http/https` 地址的时候，就会使用账号密码验证，当使用ssh地址的时候，就会用 `SSH Key` 验证。\n所以当我们不想输入账号密码的时候，可以在 `~/.gitconfig` 中加入如下代码：\n\n```\n[url \"git@github.com:\"]\n  insteadOf = https://github.com/\n[url \"git@github.com:\"]\n  pushInsteadOf = \"git://github.com/\"\n[url \"git@github.com:\"]\n  pushInsteadOf = \"https://github.com/\"\n```\n\n相关地址可以根据具体情况具体修改，修改完之后就会强制使用 `ssh` 验证了。\n\n然后 `pod install`，可以了吗？不！它又出错了。\n\n```\n[!] Error installing MTCameraAR\n[!] Failed to download 'MTCameraAR'\n```\n\n（一脸懵逼again...）\n\n后来尝试卸载重装cocoapods，都不行。正当无可奈何之际，突然想起来，pod有 `--verbose` 这个参数啊，说不定会有帮助。\n于是 `pod install --verbose`\n\n![](http://7viin1.com1.z0.glb.clouddn.com/pic.png)\n\n关键的错误就出现了， `git-lfs: command not found`\n由于这个库的文件都很大，没有使用git-lfs的话会超时，无法成功拉取。所以只要[安装git-lfs](https://github.com/git-lfs/git-lfs/wiki/Installation)就好了。\n\nbingo！问题都解决了。\n\n\n\n\n","source":"_posts/fight-with-cocoapods.md","raw":"---\ntitle: 与Cocoapods抗战的一天\ndate: 2018-05-22 22:43:54\ntag:\n- iOS\n---\n\n> 在升级Mac系统到macOS High Sierra（10.13.4）的时候，出现升级失败导致开不了机，所有的数据全没了。\n> 🌶🐔🍎💊\n> 之前的系统环境都要全部重新配置，在配置cocoapods的时候遇到了一些问题，特此记录。\n\n## 安装cocoapods依赖的环境\n\n这步网上有很多[教程](https://www.google.com.hk/search?q=%E5%AE%89%E8%A3%85cocoapods&oq=%E5%AE%89%E8%A3%85cocoapods&aqs=chrome..69i57j69i61j0.3420j0j4&sourceid=chrome&ie=UTF-8)，就不再赘述。\n然而安装完后，在执行 `pod install` 或 `pod update` 时，就会出现如下错误：\n\n```\nArgumentError - Malformed version number string\n/Library/Ruby/Site/2.3.0/rubygems/version.rb:209:in `initialize'\n/Library/Ruby/Site/2.3.0/rubygems/version.rb:200:in `new'\n/Library/Ruby/Site/2.3.0/rubygems/version.rb:200:in `new'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:123:in `embedded_content_settings'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:68:in `generate'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:39:in `save_as'\n...\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/installer.rb:183:in `generate_pods_project'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/installer.rb:119:in `install!'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/command/install.rb:41:in `run'\n/Library/Ruby/Gems/2.3.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/command.rb:52:in `run'\n/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/bin/pod:55:in `<top (required)>'\n/usr/bin/pod:23:in `load'\n/usr/bin/pod:23:in `<main>'\n```\n\n（一脸懵逼...）\n\nGoogle搜了一堆也没找到解决办法，后来在Cocoapods的issues里找到[一个解决方案](https://github.com/CocoaPods/CocoaPods/issues/7756):\n\n> jcharr1: I came across this issue today, too, when trying to run \"pod install.\" What version of Rubygems are you running? For me, I had updated with `gem update --system` which brought me up to v2.7.7. Downgrading to 2.7.6 with `gem update --system 2.7.6` fixed this for me.\n\n这位 `jcharr1` 说gem版本太高了导致的，他降级到2.7.6就可以了。于是我也尝试着降级了一下，果然解决了！不过其中缘由不得而知，有时间再研究一下。\n\n## Pod install\n\n现在可以正常 `pod install` 和 `pod update` 了吗？并不。\n当我按下回车键之后，又出现了一个小问题：\n\n```\nAnalyzing dependencies\nPre-downloading: `XXXX` from `http://xxx.com/xxx/xxx.git`, tag `xxx_6.9.5`\nUsername for 'http://xxx.com': aaa\nPassword for 'http://aaa@xxx.com':\n```\n\n其实这个输入账号密码就能解决问题了，但是我比较好奇的是我已经有添加了 `SSH Key`，为什么还会要我输入账号密码呢？原来，当我们的pod组件的地址使用的是 `http/https` 地址的时候，就会使用账号密码验证，当使用ssh地址的时候，就会用 `SSH Key` 验证。\n所以当我们不想输入账号密码的时候，可以在 `~/.gitconfig` 中加入如下代码：\n\n```\n[url \"git@github.com:\"]\n  insteadOf = https://github.com/\n[url \"git@github.com:\"]\n  pushInsteadOf = \"git://github.com/\"\n[url \"git@github.com:\"]\n  pushInsteadOf = \"https://github.com/\"\n```\n\n相关地址可以根据具体情况具体修改，修改完之后就会强制使用 `ssh` 验证了。\n\n然后 `pod install`，可以了吗？不！它又出错了。\n\n```\n[!] Error installing MTCameraAR\n[!] Failed to download 'MTCameraAR'\n```\n\n（一脸懵逼again...）\n\n后来尝试卸载重装cocoapods，都不行。正当无可奈何之际，突然想起来，pod有 `--verbose` 这个参数啊，说不定会有帮助。\n于是 `pod install --verbose`\n\n![](http://7viin1.com1.z0.glb.clouddn.com/pic.png)\n\n关键的错误就出现了， `git-lfs: command not found`\n由于这个库的文件都很大，没有使用git-lfs的话会超时，无法成功拉取。所以只要[安装git-lfs](https://github.com/git-lfs/git-lfs/wiki/Installation)就好了。\n\nbingo！问题都解决了。\n\n\n\n\n","slug":"fight-with-cocoapods","published":1,"updated":"2019-02-25T09:25:12.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsk52axc0005ae3rk8qwga37","content":"<blockquote>\n<p>在升级Mac系统到macOS High Sierra（10.13.4）的时候，出现升级失败导致开不了机，所有的数据全没了。<br>🌶🐔🍎💊<br>之前的系统环境都要全部重新配置，在配置cocoapods的时候遇到了一些问题，特此记录。</p>\n</blockquote>\n<h2 id=\"安装cocoapods依赖的环境\"><a href=\"#安装cocoapods依赖的环境\" class=\"headerlink\" title=\"安装cocoapods依赖的环境\"></a>安装cocoapods依赖的环境</h2><p>这步网上有很多<a href=\"https://www.google.com.hk/search?q=%E5%AE%89%E8%A3%85cocoapods&amp;oq=%E5%AE%89%E8%A3%85cocoapods&amp;aqs=chrome..69i57j69i61j0.3420j0j4&amp;sourceid=chrome&amp;ie=UTF-8\" target=\"_blank\" rel=\"noopener\">教程</a>，就不再赘述。<br>然而安装完后，在执行 <code>pod install</code> 或 <code>pod update</code> 时，就会出现如下错误：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArgumentError - Malformed version number string</span><br><span class=\"line\">/Library/Ruby/Site/2.3.0/rubygems/version.rb:209:in `initialize&apos;</span><br><span class=\"line\">/Library/Ruby/Site/2.3.0/rubygems/version.rb:200:in `new&apos;</span><br><span class=\"line\">/Library/Ruby/Site/2.3.0/rubygems/version.rb:200:in `new&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:123:in `embedded_content_settings&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:68:in `generate&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:39:in `save_as&apos;</span><br><span class=\"line\">...</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/installer.rb:183:in `generate_pods_project&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/installer.rb:119:in `install!&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/command/install.rb:41:in `run&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/command.rb:52:in `run&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/bin/pod:55:in `&lt;top (required)&gt;&apos;</span><br><span class=\"line\">/usr/bin/pod:23:in `load&apos;</span><br><span class=\"line\">/usr/bin/pod:23:in `&lt;main&gt;&apos;</span><br></pre></td></tr></table></figure>\n<p>（一脸懵逼…）</p>\n<p>Google搜了一堆也没找到解决办法，后来在Cocoapods的issues里找到<a href=\"https://github.com/CocoaPods/CocoaPods/issues/7756\" target=\"_blank\" rel=\"noopener\">一个解决方案</a>:</p>\n<blockquote>\n<p>jcharr1: I came across this issue today, too, when trying to run “pod install.” What version of Rubygems are you running? For me, I had updated with <code>gem update --system</code> which brought me up to v2.7.7. Downgrading to 2.7.6 with <code>gem update --system 2.7.6</code> fixed this for me.</p>\n</blockquote>\n<p>这位 <code>jcharr1</code> 说gem版本太高了导致的，他降级到2.7.6就可以了。于是我也尝试着降级了一下，果然解决了！不过其中缘由不得而知，有时间再研究一下。</p>\n<h2 id=\"Pod-install\"><a href=\"#Pod-install\" class=\"headerlink\" title=\"Pod install\"></a>Pod install</h2><p>现在可以正常 <code>pod install</code> 和 <code>pod update</code> 了吗？并不。<br>当我按下回车键之后，又出现了一个小问题：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Analyzing dependencies</span><br><span class=\"line\">Pre-downloading: `XXXX` from `http://xxx.com/xxx/xxx.git`, tag `xxx_6.9.5`</span><br><span class=\"line\">Username for &apos;http://xxx.com&apos;: aaa</span><br><span class=\"line\">Password for &apos;http://aaa@xxx.com&apos;:</span><br></pre></td></tr></table></figure>\n<p>其实这个输入账号密码就能解决问题了，但是我比较好奇的是我已经有添加了 <code>SSH Key</code>，为什么还会要我输入账号密码呢？原来，当我们的pod组件的地址使用的是 <code>http/https</code> 地址的时候，就会使用账号密码验证，当使用ssh地址的时候，就会用 <code>SSH Key</code> 验证。<br>所以当我们不想输入账号密码的时候，可以在 <code>~/.gitconfig</code> 中加入如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[url &quot;git@github.com:&quot;]</span><br><span class=\"line\">  insteadOf = https://github.com/</span><br><span class=\"line\">[url &quot;git@github.com:&quot;]</span><br><span class=\"line\">  pushInsteadOf = &quot;git://github.com/&quot;</span><br><span class=\"line\">[url &quot;git@github.com:&quot;]</span><br><span class=\"line\">  pushInsteadOf = &quot;https://github.com/&quot;</span><br></pre></td></tr></table></figure>\n<p>相关地址可以根据具体情况具体修改，修改完之后就会强制使用 <code>ssh</code> 验证了。</p>\n<p>然后 <code>pod install</code>，可以了吗？不！它又出错了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[!] Error installing MTCameraAR</span><br><span class=\"line\">[!] Failed to download &apos;MTCameraAR&apos;</span><br></pre></td></tr></table></figure>\n<p>（一脸懵逼again…）</p>\n<p>后来尝试卸载重装cocoapods，都不行。正当无可奈何之际，突然想起来，pod有 <code>--verbose</code> 这个参数啊，说不定会有帮助。<br>于是 <code>pod install --verbose</code></p>\n<p><img src=\"http://7viin1.com1.z0.glb.clouddn.com/pic.png\" alt=\"\"></p>\n<p>关键的错误就出现了， <code>git-lfs: command not found</code><br>由于这个库的文件都很大，没有使用git-lfs的话会超时，无法成功拉取。所以只要<a href=\"https://github.com/git-lfs/git-lfs/wiki/Installation\" target=\"_blank\" rel=\"noopener\">安装git-lfs</a>就好了。</p>\n<p>bingo！问题都解决了。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>在升级Mac系统到macOS High Sierra（10.13.4）的时候，出现升级失败导致开不了机，所有的数据全没了。<br>🌶🐔🍎💊<br>之前的系统环境都要全部重新配置，在配置cocoapods的时候遇到了一些问题，特此记录。</p>\n</blockquote>\n<h2 id=\"安装cocoapods依赖的环境\"><a href=\"#安装cocoapods依赖的环境\" class=\"headerlink\" title=\"安装cocoapods依赖的环境\"></a>安装cocoapods依赖的环境</h2><p>这步网上有很多<a href=\"https://www.google.com.hk/search?q=%E5%AE%89%E8%A3%85cocoapods&amp;oq=%E5%AE%89%E8%A3%85cocoapods&amp;aqs=chrome..69i57j69i61j0.3420j0j4&amp;sourceid=chrome&amp;ie=UTF-8\" target=\"_blank\" rel=\"noopener\">教程</a>，就不再赘述。<br>然而安装完后，在执行 <code>pod install</code> 或 <code>pod update</code> 时，就会出现如下错误：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArgumentError - Malformed version number string</span><br><span class=\"line\">/Library/Ruby/Site/2.3.0/rubygems/version.rb:209:in `initialize&apos;</span><br><span class=\"line\">/Library/Ruby/Site/2.3.0/rubygems/version.rb:200:in `new&apos;</span><br><span class=\"line\">/Library/Ruby/Site/2.3.0/rubygems/version.rb:200:in `new&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:123:in `embedded_content_settings&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:68:in `generate&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/generator/xcconfig/aggregate_xcconfig.rb:39:in `save_as&apos;</span><br><span class=\"line\">...</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/installer.rb:183:in `generate_pods_project&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/installer.rb:119:in `install!&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/command/install.rb:41:in `run&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/lib/cocoapods/command.rb:52:in `run&apos;</span><br><span class=\"line\">/Library/Ruby/Gems/2.3.0/gems/cocoapods-1.5.2/bin/pod:55:in `&lt;top (required)&gt;&apos;</span><br><span class=\"line\">/usr/bin/pod:23:in `load&apos;</span><br><span class=\"line\">/usr/bin/pod:23:in `&lt;main&gt;&apos;</span><br></pre></td></tr></table></figure>\n<p>（一脸懵逼…）</p>\n<p>Google搜了一堆也没找到解决办法，后来在Cocoapods的issues里找到<a href=\"https://github.com/CocoaPods/CocoaPods/issues/7756\" target=\"_blank\" rel=\"noopener\">一个解决方案</a>:</p>\n<blockquote>\n<p>jcharr1: I came across this issue today, too, when trying to run “pod install.” What version of Rubygems are you running? For me, I had updated with <code>gem update --system</code> which brought me up to v2.7.7. Downgrading to 2.7.6 with <code>gem update --system 2.7.6</code> fixed this for me.</p>\n</blockquote>\n<p>这位 <code>jcharr1</code> 说gem版本太高了导致的，他降级到2.7.6就可以了。于是我也尝试着降级了一下，果然解决了！不过其中缘由不得而知，有时间再研究一下。</p>\n<h2 id=\"Pod-install\"><a href=\"#Pod-install\" class=\"headerlink\" title=\"Pod install\"></a>Pod install</h2><p>现在可以正常 <code>pod install</code> 和 <code>pod update</code> 了吗？并不。<br>当我按下回车键之后，又出现了一个小问题：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Analyzing dependencies</span><br><span class=\"line\">Pre-downloading: `XXXX` from `http://xxx.com/xxx/xxx.git`, tag `xxx_6.9.5`</span><br><span class=\"line\">Username for &apos;http://xxx.com&apos;: aaa</span><br><span class=\"line\">Password for &apos;http://aaa@xxx.com&apos;:</span><br></pre></td></tr></table></figure>\n<p>其实这个输入账号密码就能解决问题了，但是我比较好奇的是我已经有添加了 <code>SSH Key</code>，为什么还会要我输入账号密码呢？原来，当我们的pod组件的地址使用的是 <code>http/https</code> 地址的时候，就会使用账号密码验证，当使用ssh地址的时候，就会用 <code>SSH Key</code> 验证。<br>所以当我们不想输入账号密码的时候，可以在 <code>~/.gitconfig</code> 中加入如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[url &quot;git@github.com:&quot;]</span><br><span class=\"line\">  insteadOf = https://github.com/</span><br><span class=\"line\">[url &quot;git@github.com:&quot;]</span><br><span class=\"line\">  pushInsteadOf = &quot;git://github.com/&quot;</span><br><span class=\"line\">[url &quot;git@github.com:&quot;]</span><br><span class=\"line\">  pushInsteadOf = &quot;https://github.com/&quot;</span><br></pre></td></tr></table></figure>\n<p>相关地址可以根据具体情况具体修改，修改完之后就会强制使用 <code>ssh</code> 验证了。</p>\n<p>然后 <code>pod install</code>，可以了吗？不！它又出错了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[!] Error installing MTCameraAR</span><br><span class=\"line\">[!] Failed to download &apos;MTCameraAR&apos;</span><br></pre></td></tr></table></figure>\n<p>（一脸懵逼again…）</p>\n<p>后来尝试卸载重装cocoapods，都不行。正当无可奈何之际，突然想起来，pod有 <code>--verbose</code> 这个参数啊，说不定会有帮助。<br>于是 <code>pod install --verbose</code></p>\n<p><img src=\"http://7viin1.com1.z0.glb.clouddn.com/pic.png\" alt=\"\"></p>\n<p>关键的错误就出现了， <code>git-lfs: command not found</code><br>由于这个库的文件都很大，没有使用git-lfs的话会超时，无法成功拉取。所以只要<a href=\"https://github.com/git-lfs/git-lfs/wiki/Installation\" target=\"_blank\" rel=\"noopener\">安装git-lfs</a>就好了。</p>\n<p>bingo！问题都解决了。</p>\n"},{"title":"Sublime Text 使用备忘","date":"2018-12-24T13:56:15.000Z","_content":"\n### 快捷键备忘\n\n* 【control+tab】：在tab之间切换\n* 【command+j】：合并两行\n* 【command+l】：选择当前行\n* 【command+enter】：下一行开辟新行\n* 【shift+command+enter】：上一行开辟新行\n* 【option+鼠标左键】：块选择并进入多点编辑模式\n* 【option+左右键】：移动一个单词（+shift 同时进行选择）\n* 【command+左右键】：行首行位切换\n* 【shift+command+p】：在命令中直接输入文档类型（如css等可直接切换）\n* 【shift+command+p】：reindent lines 代码风格缩进\n\n\n### 配置文件\n\n那么如何绑定快捷键呢，首先 `shift+command+p` 打开命令面板，输入`keybindings`，点击 `Key Bindings - User`，在配置文件中加入 `[{\"key\": [\"shift+tab\"], \"command\": \"reindent\", \"agrs\": {\"single_line\": false }},]`。\n\n那么如何知道具体命令是什么呢？\n可以通过 \n```\ncontrol+`\n``` \n打开工作台，在工作台中输入 `sublime.log_commands(True)`，然后再通过`shift+command+p`打开命令面板，输入 `reindent lines`, 就可以在下边的工作台中看到具体命令名及参数了。\n\n**那么所有的配置都保存到哪了呢？**\n\n可以点击左上角的 `Sublime Text - Preferences - browse Packages...`\n这个时候应该会打开到这个目录下 `~/Library/Application Support/Sublime Text 3/Packages`，具体的根据环境不同路径会不同。\n\n在该目录下，用户的所有配置项会存在`User`文件夹中，并且这些配置文件都是纯文本的，所以可以支持版本控制。\n\n除了这个之外，还有一些自定义项也可以通过 `shift+command+p` 打开命令面板，输入 `settings` 打开 `Preferences: Settings - User` 便可找到配置自定义配置项的配置文件了。\n\n### 使用Packages Control安装扩展包\n\n安装 `Packages Control` 的方法可以参考这个 [Installation - Package Control](https://packagecontrol.io/installation)\n\n官网上也有很多库可供选择。安装完`Packages Control`之后，包都会存放在 `~/Library/Application Support/Sublime Text 3/Packages` 里边的 `Installed Packages` 里。并且会在 `Packages/User` 里新加一个 `Packge Control.sublime-settings` 配置项。\n\n推荐的一些扩展包\n\n> `AdvancedNewFile`\n`Emmet`\n`Git`\n`Sass`\n`SublimeERB`\n`SyncedSideBar`\n\n### 快速查找\n\n正常情况下，可以通过 `command+p` 直接输入模糊搜索：\n\n> eg: 模糊搜索名+冒号+行号，如：`demo:10`，光标会直接停在第10行\n> eg: 搜索名@函数名会跳转到函数名，如：`demo@new`\n\n可以通过 `command+f` 在本文件中进行查找：\n\n> `enter`：搜索下一处；`shift+enter`：搜索上一处；`esc`：停在当前单词\n> `command+d` n次，可以同时编辑，并进入多点编辑\n\n要在文件夹下查找的话，需要在文件夹上右键，点击 `find in finder`，会把相应的内容记在一个文本里，按`F4`可以跳转到第一个查找项，或者也可以直接在文本里用鼠标双击打开。\n\n跳走了可以用 `control+-` 直接跳回去。\n如果跳多了，可以 `control+shift+-` 可以再进行回到上一级的操作。\n\n### Emmet\n\n牛逼！（todo）\n\n### 代码片段\n（todo）\n\n### 自动补齐\n（todo）\n\n/user下的 `damemon.sublime-completions`\n\nsublimeCodeIntel\n\n### build system\n（todo）\n\n","source":"_posts/sublimetext-remind.md","raw":"---\ntitle: Sublime Text 使用备忘\ndate: 2018-12-24 21:56:15\ntags: sublime text\n---\n\n### 快捷键备忘\n\n* 【control+tab】：在tab之间切换\n* 【command+j】：合并两行\n* 【command+l】：选择当前行\n* 【command+enter】：下一行开辟新行\n* 【shift+command+enter】：上一行开辟新行\n* 【option+鼠标左键】：块选择并进入多点编辑模式\n* 【option+左右键】：移动一个单词（+shift 同时进行选择）\n* 【command+左右键】：行首行位切换\n* 【shift+command+p】：在命令中直接输入文档类型（如css等可直接切换）\n* 【shift+command+p】：reindent lines 代码风格缩进\n\n\n### 配置文件\n\n那么如何绑定快捷键呢，首先 `shift+command+p` 打开命令面板，输入`keybindings`，点击 `Key Bindings - User`，在配置文件中加入 `[{\"key\": [\"shift+tab\"], \"command\": \"reindent\", \"agrs\": {\"single_line\": false }},]`。\n\n那么如何知道具体命令是什么呢？\n可以通过 \n```\ncontrol+`\n``` \n打开工作台，在工作台中输入 `sublime.log_commands(True)`，然后再通过`shift+command+p`打开命令面板，输入 `reindent lines`, 就可以在下边的工作台中看到具体命令名及参数了。\n\n**那么所有的配置都保存到哪了呢？**\n\n可以点击左上角的 `Sublime Text - Preferences - browse Packages...`\n这个时候应该会打开到这个目录下 `~/Library/Application Support/Sublime Text 3/Packages`，具体的根据环境不同路径会不同。\n\n在该目录下，用户的所有配置项会存在`User`文件夹中，并且这些配置文件都是纯文本的，所以可以支持版本控制。\n\n除了这个之外，还有一些自定义项也可以通过 `shift+command+p` 打开命令面板，输入 `settings` 打开 `Preferences: Settings - User` 便可找到配置自定义配置项的配置文件了。\n\n### 使用Packages Control安装扩展包\n\n安装 `Packages Control` 的方法可以参考这个 [Installation - Package Control](https://packagecontrol.io/installation)\n\n官网上也有很多库可供选择。安装完`Packages Control`之后，包都会存放在 `~/Library/Application Support/Sublime Text 3/Packages` 里边的 `Installed Packages` 里。并且会在 `Packages/User` 里新加一个 `Packge Control.sublime-settings` 配置项。\n\n推荐的一些扩展包\n\n> `AdvancedNewFile`\n`Emmet`\n`Git`\n`Sass`\n`SublimeERB`\n`SyncedSideBar`\n\n### 快速查找\n\n正常情况下，可以通过 `command+p` 直接输入模糊搜索：\n\n> eg: 模糊搜索名+冒号+行号，如：`demo:10`，光标会直接停在第10行\n> eg: 搜索名@函数名会跳转到函数名，如：`demo@new`\n\n可以通过 `command+f` 在本文件中进行查找：\n\n> `enter`：搜索下一处；`shift+enter`：搜索上一处；`esc`：停在当前单词\n> `command+d` n次，可以同时编辑，并进入多点编辑\n\n要在文件夹下查找的话，需要在文件夹上右键，点击 `find in finder`，会把相应的内容记在一个文本里，按`F4`可以跳转到第一个查找项，或者也可以直接在文本里用鼠标双击打开。\n\n跳走了可以用 `control+-` 直接跳回去。\n如果跳多了，可以 `control+shift+-` 可以再进行回到上一级的操作。\n\n### Emmet\n\n牛逼！（todo）\n\n### 代码片段\n（todo）\n\n### 自动补齐\n（todo）\n\n/user下的 `damemon.sublime-completions`\n\nsublimeCodeIntel\n\n### build system\n（todo）\n\n","slug":"sublimetext-remind","published":1,"updated":"2019-02-25T09:25:12.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsk52axe0006ae3rwm1h7l12","content":"<h3 id=\"快捷键备忘\"><a href=\"#快捷键备忘\" class=\"headerlink\" title=\"快捷键备忘\"></a>快捷键备忘</h3><ul>\n<li>【control+tab】：在tab之间切换</li>\n<li>【command+j】：合并两行</li>\n<li>【command+l】：选择当前行</li>\n<li>【command+enter】：下一行开辟新行</li>\n<li>【shift+command+enter】：上一行开辟新行</li>\n<li>【option+鼠标左键】：块选择并进入多点编辑模式</li>\n<li>【option+左右键】：移动一个单词（+shift 同时进行选择）</li>\n<li>【command+左右键】：行首行位切换</li>\n<li>【shift+command+p】：在命令中直接输入文档类型（如css等可直接切换）</li>\n<li>【shift+command+p】：reindent lines 代码风格缩进</li>\n</ul>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>那么如何绑定快捷键呢，首先 <code>shift+command+p</code> 打开命令面板，输入<code>keybindings</code>，点击 <code>Key Bindings - User</code>，在配置文件中加入 <code>[{&quot;key&quot;: [&quot;shift+tab&quot;], &quot;command&quot;: &quot;reindent&quot;, &quot;agrs&quot;: {&quot;single_line&quot;: false }},]</code>。</p>\n<p>那么如何知道具体命令是什么呢？<br>可以通过 </p>\n<pre><code>control+`\n</code></pre><p>打开工作台，在工作台中输入 <code>sublime.log_commands(True)</code>，然后再通过<code>shift+command+p</code>打开命令面板，输入 <code>reindent lines</code>, 就可以在下边的工作台中看到具体命令名及参数了。</p>\n<p><strong>那么所有的配置都保存到哪了呢？</strong></p>\n<p>可以点击左上角的 <code>Sublime Text - Preferences - browse Packages...</code><br>这个时候应该会打开到这个目录下 <code>~/Library/Application Support/Sublime Text 3/Packages</code>，具体的根据环境不同路径会不同。</p>\n<p>在该目录下，用户的所有配置项会存在<code>User</code>文件夹中，并且这些配置文件都是纯文本的，所以可以支持版本控制。</p>\n<p>除了这个之外，还有一些自定义项也可以通过 <code>shift+command+p</code> 打开命令面板，输入 <code>settings</code> 打开 <code>Preferences: Settings - User</code> 便可找到配置自定义配置项的配置文件了。</p>\n<h3 id=\"使用Packages-Control安装扩展包\"><a href=\"#使用Packages-Control安装扩展包\" class=\"headerlink\" title=\"使用Packages Control安装扩展包\"></a>使用Packages Control安装扩展包</h3><p>安装 <code>Packages Control</code> 的方法可以参考这个 <a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"noopener\">Installation - Package Control</a></p>\n<p>官网上也有很多库可供选择。安装完<code>Packages Control</code>之后，包都会存放在 <code>~/Library/Application Support/Sublime Text 3/Packages</code> 里边的 <code>Installed Packages</code> 里。并且会在 <code>Packages/User</code> 里新加一个 <code>Packge Control.sublime-settings</code> 配置项。</p>\n<p>推荐的一些扩展包</p>\n<blockquote>\n<p><code>AdvancedNewFile</code><br><code>Emmet</code><br><code>Git</code><br><code>Sass</code><br><code>SublimeERB</code><br><code>SyncedSideBar</code></p>\n</blockquote>\n<h3 id=\"快速查找\"><a href=\"#快速查找\" class=\"headerlink\" title=\"快速查找\"></a>快速查找</h3><p>正常情况下，可以通过 <code>command+p</code> 直接输入模糊搜索：</p>\n<blockquote>\n<p>eg: 模糊搜索名+冒号+行号，如：<code>demo:10</code>，光标会直接停在第10行<br>eg: 搜索名@函数名会跳转到函数名，如：<code>demo@new</code></p>\n</blockquote>\n<p>可以通过 <code>command+f</code> 在本文件中进行查找：</p>\n<blockquote>\n<p><code>enter</code>：搜索下一处；<code>shift+enter</code>：搜索上一处；<code>esc</code>：停在当前单词<br><code>command+d</code> n次，可以同时编辑，并进入多点编辑</p>\n</blockquote>\n<p>要在文件夹下查找的话，需要在文件夹上右键，点击 <code>find in finder</code>，会把相应的内容记在一个文本里，按<code>F4</code>可以跳转到第一个查找项，或者也可以直接在文本里用鼠标双击打开。</p>\n<p>跳走了可以用 <code>control+-</code> 直接跳回去。<br>如果跳多了，可以 <code>control+shift+-</code> 可以再进行回到上一级的操作。</p>\n<h3 id=\"Emmet\"><a href=\"#Emmet\" class=\"headerlink\" title=\"Emmet\"></a>Emmet</h3><p>牛逼！（todo）</p>\n<h3 id=\"代码片段\"><a href=\"#代码片段\" class=\"headerlink\" title=\"代码片段\"></a>代码片段</h3><p>（todo）</p>\n<h3 id=\"自动补齐\"><a href=\"#自动补齐\" class=\"headerlink\" title=\"自动补齐\"></a>自动补齐</h3><p>（todo）</p>\n<p>/user下的 <code>damemon.sublime-completions</code></p>\n<p>sublimeCodeIntel</p>\n<h3 id=\"build-system\"><a href=\"#build-system\" class=\"headerlink\" title=\"build system\"></a>build system</h3><p>（todo）</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"快捷键备忘\"><a href=\"#快捷键备忘\" class=\"headerlink\" title=\"快捷键备忘\"></a>快捷键备忘</h3><ul>\n<li>【control+tab】：在tab之间切换</li>\n<li>【command+j】：合并两行</li>\n<li>【command+l】：选择当前行</li>\n<li>【command+enter】：下一行开辟新行</li>\n<li>【shift+command+enter】：上一行开辟新行</li>\n<li>【option+鼠标左键】：块选择并进入多点编辑模式</li>\n<li>【option+左右键】：移动一个单词（+shift 同时进行选择）</li>\n<li>【command+左右键】：行首行位切换</li>\n<li>【shift+command+p】：在命令中直接输入文档类型（如css等可直接切换）</li>\n<li>【shift+command+p】：reindent lines 代码风格缩进</li>\n</ul>\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>那么如何绑定快捷键呢，首先 <code>shift+command+p</code> 打开命令面板，输入<code>keybindings</code>，点击 <code>Key Bindings - User</code>，在配置文件中加入 <code>[{&quot;key&quot;: [&quot;shift+tab&quot;], &quot;command&quot;: &quot;reindent&quot;, &quot;agrs&quot;: {&quot;single_line&quot;: false }},]</code>。</p>\n<p>那么如何知道具体命令是什么呢？<br>可以通过 </p>\n<pre><code>control+`\n</code></pre><p>打开工作台，在工作台中输入 <code>sublime.log_commands(True)</code>，然后再通过<code>shift+command+p</code>打开命令面板，输入 <code>reindent lines</code>, 就可以在下边的工作台中看到具体命令名及参数了。</p>\n<p><strong>那么所有的配置都保存到哪了呢？</strong></p>\n<p>可以点击左上角的 <code>Sublime Text - Preferences - browse Packages...</code><br>这个时候应该会打开到这个目录下 <code>~/Library/Application Support/Sublime Text 3/Packages</code>，具体的根据环境不同路径会不同。</p>\n<p>在该目录下，用户的所有配置项会存在<code>User</code>文件夹中，并且这些配置文件都是纯文本的，所以可以支持版本控制。</p>\n<p>除了这个之外，还有一些自定义项也可以通过 <code>shift+command+p</code> 打开命令面板，输入 <code>settings</code> 打开 <code>Preferences: Settings - User</code> 便可找到配置自定义配置项的配置文件了。</p>\n<h3 id=\"使用Packages-Control安装扩展包\"><a href=\"#使用Packages-Control安装扩展包\" class=\"headerlink\" title=\"使用Packages Control安装扩展包\"></a>使用Packages Control安装扩展包</h3><p>安装 <code>Packages Control</code> 的方法可以参考这个 <a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"noopener\">Installation - Package Control</a></p>\n<p>官网上也有很多库可供选择。安装完<code>Packages Control</code>之后，包都会存放在 <code>~/Library/Application Support/Sublime Text 3/Packages</code> 里边的 <code>Installed Packages</code> 里。并且会在 <code>Packages/User</code> 里新加一个 <code>Packge Control.sublime-settings</code> 配置项。</p>\n<p>推荐的一些扩展包</p>\n<blockquote>\n<p><code>AdvancedNewFile</code><br><code>Emmet</code><br><code>Git</code><br><code>Sass</code><br><code>SublimeERB</code><br><code>SyncedSideBar</code></p>\n</blockquote>\n<h3 id=\"快速查找\"><a href=\"#快速查找\" class=\"headerlink\" title=\"快速查找\"></a>快速查找</h3><p>正常情况下，可以通过 <code>command+p</code> 直接输入模糊搜索：</p>\n<blockquote>\n<p>eg: 模糊搜索名+冒号+行号，如：<code>demo:10</code>，光标会直接停在第10行<br>eg: 搜索名@函数名会跳转到函数名，如：<code>demo@new</code></p>\n</blockquote>\n<p>可以通过 <code>command+f</code> 在本文件中进行查找：</p>\n<blockquote>\n<p><code>enter</code>：搜索下一处；<code>shift+enter</code>：搜索上一处；<code>esc</code>：停在当前单词<br><code>command+d</code> n次，可以同时编辑，并进入多点编辑</p>\n</blockquote>\n<p>要在文件夹下查找的话，需要在文件夹上右键，点击 <code>find in finder</code>，会把相应的内容记在一个文本里，按<code>F4</code>可以跳转到第一个查找项，或者也可以直接在文本里用鼠标双击打开。</p>\n<p>跳走了可以用 <code>control+-</code> 直接跳回去。<br>如果跳多了，可以 <code>control+shift+-</code> 可以再进行回到上一级的操作。</p>\n<h3 id=\"Emmet\"><a href=\"#Emmet\" class=\"headerlink\" title=\"Emmet\"></a>Emmet</h3><p>牛逼！（todo）</p>\n<h3 id=\"代码片段\"><a href=\"#代码片段\" class=\"headerlink\" title=\"代码片段\"></a>代码片段</h3><p>（todo）</p>\n<h3 id=\"自动补齐\"><a href=\"#自动补齐\" class=\"headerlink\" title=\"自动补齐\"></a>自动补齐</h3><p>（todo）</p>\n<p>/user下的 <code>damemon.sublime-completions</code></p>\n<p>sublimeCodeIntel</p>\n<h3 id=\"build-system\"><a href=\"#build-system\" class=\"headerlink\" title=\"build system\"></a>build system</h3><p>（todo）</p>\n"},{"title":"用 Swift 协议扩展和泛型来实现复用[译]","date":"2016-11-11T12:56:15.000Z","_content":"\n\n作为一个iOS开发者，最常用的任务就是通过自定义cell的子类，来实现UITableView或者UICollectionView的自定义。并且 `UITableView` 和 `UICollectionView` 在注册自定义cell子类这一块都有非常类似的API:\n\n```swift\npublic func registerClass(cellClass: AnyClass?, forCellWithReuseIdentifier identifier: String)\npublic func registerNib(nib: UINib?, forCellWithReuseIdentifier identifier: String)\n```\n\n对于注册cell的自定义最常用的解决办法就是，声明一个reuseIdentifier的常量，像下面这样: \n\n```swift\nprivate let reuseIdentifier = \"BookCell\"\n\nclass BookListViewController: UIViewController, UICollectionViewDataSource {\n\n    @IBOutlet private weak var collectionView: UICollectionView!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let nib = UINib(nibName: \"BookCell\", bundle: nil)\n        self.collectionView.registerNib(nib, forCellWithReuseIdentifier: reuseIdentifier)\n    }\n\n    func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {\n        let cell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifier, forIndexPath: indexPath)\n    \n        if let bookCell = cell as? BookCell {\n            // TODO: configure cell\n        }\n    \n        return cell\n    }\n}\n```\n\n接下来让我们尝试着使用泛型来让它简单化和安全化。  \n  \n首先，如果在我们的代码当中能不需要到处声明reuse identifier常量，那就再好不过了。而事实上，我们可以直接使用自定义cell的类名来当做   **默认的reuseIdentifier**。  \n我们可以通过创建一个Reuseable Views的协议并且创建默认的声明方法给 `UIView` 的子类们。\n\n```swift\nprotocol ReusableView: class {\n    static var defaultReuseIdentifier: String { get }\n}\n\nextension ReusableView where Self: UIView {\n    static var defaultReuseIdentifier: String {\n        return NSStringFromClass(self)\n    }\n}\n\nextension UICollectionViewCell: ReusableView {\n}\n```\n\n通过让 `UICollectionViewCell` 遵循 `ReusableView` 协议，我们可以得到每个cell子类的一个唯一的重用标识。\n\n```swift\nlet identifier = BookCell.defaultReuseIdentifier\n// identifier = \"MyModule.BookCell\"\n```\n\n接下来，我们通过同样的方法，将注册Nib步骤中的一些脏代码给去除掉。  \n\n我们创建一个 **Nib Loadable Views** 的协议并通过协议拓展添加一个默认方法实现。\n\n```swift\nprotocol NibLoadableView: class {\n    static var nibName: String { get }\n}\n\nextension NibLoadableView where Self: UIView {\n    static var nibName: String {\n        return NSStringFromClass(self).componentsSeparatedByString(\".\").last!\n    }\n}\n\nextension BookCell: NibLoadableView {\n}\n```\n\n通过让我们的 `BookCell` 类遵循 `NibLoadableView` 协议，现在我们就有了一个更安全和方便的方法去获得到Nib的名称。\n\n```swift\nlet nibName = BookCell.nibName\n// nibName = \"BookCell\"\n```\n\n有这两个协议，我们可以通过使用 **Swift的泛型** 并且通过拓展 `UICollectionView` 来简化cell的注册和使用。\n\n```swift\nextension UICollectionView {\n    \n    func register<T: UICollectionViewCell where T: ReusableView>(_: T.Type) {\n        registerClass(T.self, forCellWithReuseIdentifier: T.defaultReuseIdentifier)\n    }\n    \n    func register<T: UICollectionViewCell where T: ReusableView, T: NibLoadableView>(_: T.Type) {\n        let bundle = NSBundle(forClass: T.self)\n        let nib = UINib(nibName: T.nibName, bundle: bundle)\n        \n        registerNib(nib, forCellWithReuseIdentifier: T.defaultReuseIdentifier)\n    }\n    \n    func dequeueReusableCell<T: UICollectionViewCell where T: ReusableView>(forIndexPath indexPath: NSIndexPath) -> T {\n        guard let cell = dequeueReusableCellWithReuseIdentifier(T.defaultReuseIdentifier, forIndexPath: indexPath) as? T else {\n            fatalError(\"Could not dequeue cell with identifier: \\(T.defaultReuseIdentifier)\")\n        }\n        \n        return cell\n    }    \n}\n```\n\n注意这里，我们创建了两个版本的注册方法，一个是用来注册 `ReusableView` 子类用的，一个是用来注册 `ReusableView` 和 `NibLoadableView`的子类。这很好的将view controller的特定的注册方法分离出来。\n\n另一个比较棒的细节就是 `dequeueReusableCell` 方法不再需要给他任何重用标识字符串而且可以直接使用cell的子类作为返回值。\n\n现在cell的注册和使用代码看起来棒极了 :) 。\n\n```swift\nclass BookListViewController: UIViewController, UICollectionViewDataSource {\n\n    @IBOutlet private weak var collectionView: UICollectionView!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        self.collectionView.register(BookCell.self)\n    }\n\n    func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {\n        \n        let cell: BookCell = collectionView.dequeueReusableCell(forIndexPath: indexPath)\n        \n        // TODO: configure cell\n    \n        return cell\n    }\n    ...\n}\n```\n\n## 总结  \n如果你是从 Objective-C 转到 Swift 的话，研究Swift强大的新特性比如 **协议拓展**、 **泛型**， 从而找到更优雅的实现方式和替代方法是非常值得的。\n\n\n\n\n","source":"_posts/yong-swift-xieyi-tuozhan-fuyong.md","raw":"---\ntitle: 用 Swift 协议扩展和泛型来实现复用[译]\ndate: 2016-11-11 20:56:15\ntags:\n- iOS\n- Swift\n---\n\n\n作为一个iOS开发者，最常用的任务就是通过自定义cell的子类，来实现UITableView或者UICollectionView的自定义。并且 `UITableView` 和 `UICollectionView` 在注册自定义cell子类这一块都有非常类似的API:\n\n```swift\npublic func registerClass(cellClass: AnyClass?, forCellWithReuseIdentifier identifier: String)\npublic func registerNib(nib: UINib?, forCellWithReuseIdentifier identifier: String)\n```\n\n对于注册cell的自定义最常用的解决办法就是，声明一个reuseIdentifier的常量，像下面这样: \n\n```swift\nprivate let reuseIdentifier = \"BookCell\"\n\nclass BookListViewController: UIViewController, UICollectionViewDataSource {\n\n    @IBOutlet private weak var collectionView: UICollectionView!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        let nib = UINib(nibName: \"BookCell\", bundle: nil)\n        self.collectionView.registerNib(nib, forCellWithReuseIdentifier: reuseIdentifier)\n    }\n\n    func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {\n        let cell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifier, forIndexPath: indexPath)\n    \n        if let bookCell = cell as? BookCell {\n            // TODO: configure cell\n        }\n    \n        return cell\n    }\n}\n```\n\n接下来让我们尝试着使用泛型来让它简单化和安全化。  \n  \n首先，如果在我们的代码当中能不需要到处声明reuse identifier常量，那就再好不过了。而事实上，我们可以直接使用自定义cell的类名来当做   **默认的reuseIdentifier**。  \n我们可以通过创建一个Reuseable Views的协议并且创建默认的声明方法给 `UIView` 的子类们。\n\n```swift\nprotocol ReusableView: class {\n    static var defaultReuseIdentifier: String { get }\n}\n\nextension ReusableView where Self: UIView {\n    static var defaultReuseIdentifier: String {\n        return NSStringFromClass(self)\n    }\n}\n\nextension UICollectionViewCell: ReusableView {\n}\n```\n\n通过让 `UICollectionViewCell` 遵循 `ReusableView` 协议，我们可以得到每个cell子类的一个唯一的重用标识。\n\n```swift\nlet identifier = BookCell.defaultReuseIdentifier\n// identifier = \"MyModule.BookCell\"\n```\n\n接下来，我们通过同样的方法，将注册Nib步骤中的一些脏代码给去除掉。  \n\n我们创建一个 **Nib Loadable Views** 的协议并通过协议拓展添加一个默认方法实现。\n\n```swift\nprotocol NibLoadableView: class {\n    static var nibName: String { get }\n}\n\nextension NibLoadableView where Self: UIView {\n    static var nibName: String {\n        return NSStringFromClass(self).componentsSeparatedByString(\".\").last!\n    }\n}\n\nextension BookCell: NibLoadableView {\n}\n```\n\n通过让我们的 `BookCell` 类遵循 `NibLoadableView` 协议，现在我们就有了一个更安全和方便的方法去获得到Nib的名称。\n\n```swift\nlet nibName = BookCell.nibName\n// nibName = \"BookCell\"\n```\n\n有这两个协议，我们可以通过使用 **Swift的泛型** 并且通过拓展 `UICollectionView` 来简化cell的注册和使用。\n\n```swift\nextension UICollectionView {\n    \n    func register<T: UICollectionViewCell where T: ReusableView>(_: T.Type) {\n        registerClass(T.self, forCellWithReuseIdentifier: T.defaultReuseIdentifier)\n    }\n    \n    func register<T: UICollectionViewCell where T: ReusableView, T: NibLoadableView>(_: T.Type) {\n        let bundle = NSBundle(forClass: T.self)\n        let nib = UINib(nibName: T.nibName, bundle: bundle)\n        \n        registerNib(nib, forCellWithReuseIdentifier: T.defaultReuseIdentifier)\n    }\n    \n    func dequeueReusableCell<T: UICollectionViewCell where T: ReusableView>(forIndexPath indexPath: NSIndexPath) -> T {\n        guard let cell = dequeueReusableCellWithReuseIdentifier(T.defaultReuseIdentifier, forIndexPath: indexPath) as? T else {\n            fatalError(\"Could not dequeue cell with identifier: \\(T.defaultReuseIdentifier)\")\n        }\n        \n        return cell\n    }    \n}\n```\n\n注意这里，我们创建了两个版本的注册方法，一个是用来注册 `ReusableView` 子类用的，一个是用来注册 `ReusableView` 和 `NibLoadableView`的子类。这很好的将view controller的特定的注册方法分离出来。\n\n另一个比较棒的细节就是 `dequeueReusableCell` 方法不再需要给他任何重用标识字符串而且可以直接使用cell的子类作为返回值。\n\n现在cell的注册和使用代码看起来棒极了 :) 。\n\n```swift\nclass BookListViewController: UIViewController, UICollectionViewDataSource {\n\n    @IBOutlet private weak var collectionView: UICollectionView!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        self.collectionView.register(BookCell.self)\n    }\n\n    func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {\n        \n        let cell: BookCell = collectionView.dequeueReusableCell(forIndexPath: indexPath)\n        \n        // TODO: configure cell\n    \n        return cell\n    }\n    ...\n}\n```\n\n## 总结  \n如果你是从 Objective-C 转到 Swift 的话，研究Swift强大的新特性比如 **协议拓展**、 **泛型**， 从而找到更优雅的实现方式和替代方法是非常值得的。\n\n\n\n\n","slug":"yong-swift-xieyi-tuozhan-fuyong","published":1,"updated":"2019-02-25T09:25:12.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsk52axf0007ae3rvx6lrkhj","content":"<p>作为一个iOS开发者，最常用的任务就是通过自定义cell的子类，来实现UITableView或者UICollectionView的自定义。并且 <code>UITableView</code> 和 <code>UICollectionView</code> 在注册自定义cell子类这一块都有非常类似的API:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">registerClass</span><span class=\"params\">(cellClass: AnyClass?, forCellWithReuseIdentifier identifier: String)</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">registerNib</span><span class=\"params\">(nib: UINib?, forCellWithReuseIdentifier identifier: String)</span></span></span><br></pre></td></tr></table></figure>\n<p>对于注册cell的自定义最常用的解决办法就是，声明一个reuseIdentifier的常量，像下面这样: </p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">let</span> reuseIdentifier = <span class=\"string\">\"BookCell\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookListViewController</span>: <span class=\"title\">UIViewController</span>, <span class=\"title\">UICollectionViewDataSource</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@IBOutlet</span> <span class=\"keyword\">private</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> collectionView: <span class=\"type\">UICollectionView</span>!</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> nib = <span class=\"type\">UINib</span>(nibName: <span class=\"string\">\"BookCell\"</span>, bundle: <span class=\"literal\">nil</span>)</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.collectionView.registerNib(nib, forCellWithReuseIdentifier: reuseIdentifier)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">collectionView</span><span class=\"params\">(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class=\"type\">UICollectionViewCell</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> cell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifier, forIndexPath: indexPath)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> bookCell = cell <span class=\"keyword\">as</span>? <span class=\"type\">BookCell</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// <span class=\"doctag\">TODO:</span> configure cell</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来让我们尝试着使用泛型来让它简单化和安全化。  </p>\n<p>首先，如果在我们的代码当中能不需要到处声明reuse identifier常量，那就再好不过了。而事实上，我们可以直接使用自定义cell的类名来当做   <strong>默认的reuseIdentifier</strong>。<br>我们可以通过创建一个Reuseable Views的协议并且创建默认的声明方法给 <code>UIView</code> 的子类们。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">ReusableView</span>: <span class=\"title\">class</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> defaultReuseIdentifier: <span class=\"type\">String</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">ReusableView</span> <span class=\"title\">where</span> <span class=\"title\">Self</span>: <span class=\"title\">UIView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> defaultReuseIdentifier: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">NSStringFromClass</span>(<span class=\"keyword\">self</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">UICollectionViewCell</span>: <span class=\"title\">ReusableView</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过让 <code>UICollectionViewCell</code> 遵循 <code>ReusableView</code> 协议，我们可以得到每个cell子类的一个唯一的重用标识。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> identifier = <span class=\"type\">BookCell</span>.defaultReuseIdentifier</span><br><span class=\"line\"><span class=\"comment\">// identifier = \"MyModule.BookCell\"</span></span><br></pre></td></tr></table></figure>\n<p>接下来，我们通过同样的方法，将注册Nib步骤中的一些脏代码给去除掉。  </p>\n<p>我们创建一个 <strong>Nib Loadable Views</strong> 的协议并通过协议拓展添加一个默认方法实现。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">NibLoadableView</span>: <span class=\"title\">class</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> nibName: <span class=\"type\">String</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">NibLoadableView</span> <span class=\"title\">where</span> <span class=\"title\">Self</span>: <span class=\"title\">UIView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> nibName: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">NSStringFromClass</span>(<span class=\"keyword\">self</span>).componentsSeparatedByString(<span class=\"string\">\".\"</span>).last!</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">BookCell</span>: <span class=\"title\">NibLoadableView</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过让我们的 <code>BookCell</code> 类遵循 <code>NibLoadableView</code> 协议，现在我们就有了一个更安全和方便的方法去获得到Nib的名称。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> nibName = <span class=\"type\">BookCell</span>.nibName</span><br><span class=\"line\"><span class=\"comment\">// nibName = \"BookCell\"</span></span><br></pre></td></tr></table></figure>\n<p>有这两个协议，我们可以通过使用 <strong>Swift的泛型</strong> 并且通过拓展 <code>UICollectionView</code> 来简化cell的注册和使用。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">UICollectionView</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">register</span>&lt;T: UICollectionViewCell where T: ReusableView&gt;<span class=\"params\">(<span class=\"number\">_</span>: T.<span class=\"keyword\">Type</span>)</span></span> &#123;</span><br><span class=\"line\">        registerClass(<span class=\"type\">T</span>.<span class=\"keyword\">self</span>, forCellWithReuseIdentifier: <span class=\"type\">T</span>.defaultReuseIdentifier)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">register</span>&lt;T: UICollectionViewCell where T: ReusableView, T: NibLoadableView&gt;<span class=\"params\">(<span class=\"number\">_</span>: T.<span class=\"keyword\">Type</span>)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> bundle = <span class=\"type\">NSBundle</span>(forClass: <span class=\"type\">T</span>.<span class=\"keyword\">self</span>)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> nib = <span class=\"type\">UINib</span>(nibName: <span class=\"type\">T</span>.nibName, bundle: bundle)</span><br><span class=\"line\">        </span><br><span class=\"line\">        registerNib(nib, forCellWithReuseIdentifier: <span class=\"type\">T</span>.defaultReuseIdentifier)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">dequeueReusableCell</span>&lt;T: UICollectionViewCell where T: ReusableView&gt;<span class=\"params\">(forIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class=\"type\">T</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> cell = dequeueReusableCellWithReuseIdentifier(<span class=\"type\">T</span>.defaultReuseIdentifier, forIndexPath: indexPath) <span class=\"keyword\">as</span>? <span class=\"type\">T</span> <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">fatalError</span>(<span class=\"string\">\"Could not dequeue cell with identifier: \\(T.defaultReuseIdentifier)\"</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意这里，我们创建了两个版本的注册方法，一个是用来注册 <code>ReusableView</code> 子类用的，一个是用来注册 <code>ReusableView</code> 和 <code>NibLoadableView</code>的子类。这很好的将view controller的特定的注册方法分离出来。</p>\n<p>另一个比较棒的细节就是 <code>dequeueReusableCell</code> 方法不再需要给他任何重用标识字符串而且可以直接使用cell的子类作为返回值。</p>\n<p>现在cell的注册和使用代码看起来棒极了 :) 。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookListViewController</span>: <span class=\"title\">UIViewController</span>, <span class=\"title\">UICollectionViewDataSource</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@IBOutlet</span> <span class=\"keyword\">private</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> collectionView: <span class=\"type\">UICollectionView</span>!</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">self</span>.collectionView.register(<span class=\"type\">BookCell</span>.<span class=\"keyword\">self</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">collectionView</span><span class=\"params\">(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class=\"type\">UICollectionViewCell</span> &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> cell: <span class=\"type\">BookCell</span> = collectionView.dequeueReusableCell(forIndexPath: indexPath)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// <span class=\"doctag\">TODO:</span> configure cell</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>如果你是从 Objective-C 转到 Swift 的话，研究Swift强大的新特性比如 <strong>协议拓展</strong>、 <strong>泛型</strong>， 从而找到更优雅的实现方式和替代方法是非常值得的。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>作为一个iOS开发者，最常用的任务就是通过自定义cell的子类，来实现UITableView或者UICollectionView的自定义。并且 <code>UITableView</code> 和 <code>UICollectionView</code> 在注册自定义cell子类这一块都有非常类似的API:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">registerClass</span><span class=\"params\">(cellClass: AnyClass?, forCellWithReuseIdentifier identifier: String)</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">registerNib</span><span class=\"params\">(nib: UINib?, forCellWithReuseIdentifier identifier: String)</span></span></span><br></pre></td></tr></table></figure>\n<p>对于注册cell的自定义最常用的解决办法就是，声明一个reuseIdentifier的常量，像下面这样: </p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">let</span> reuseIdentifier = <span class=\"string\">\"BookCell\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookListViewController</span>: <span class=\"title\">UIViewController</span>, <span class=\"title\">UICollectionViewDataSource</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@IBOutlet</span> <span class=\"keyword\">private</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> collectionView: <span class=\"type\">UICollectionView</span>!</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> nib = <span class=\"type\">UINib</span>(nibName: <span class=\"string\">\"BookCell\"</span>, bundle: <span class=\"literal\">nil</span>)</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.collectionView.registerNib(nib, forCellWithReuseIdentifier: reuseIdentifier)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">collectionView</span><span class=\"params\">(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class=\"type\">UICollectionViewCell</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> cell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifier, forIndexPath: indexPath)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> bookCell = cell <span class=\"keyword\">as</span>? <span class=\"type\">BookCell</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// <span class=\"doctag\">TODO:</span> configure cell</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来让我们尝试着使用泛型来让它简单化和安全化。  </p>\n<p>首先，如果在我们的代码当中能不需要到处声明reuse identifier常量，那就再好不过了。而事实上，我们可以直接使用自定义cell的类名来当做   <strong>默认的reuseIdentifier</strong>。<br>我们可以通过创建一个Reuseable Views的协议并且创建默认的声明方法给 <code>UIView</code> 的子类们。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">ReusableView</span>: <span class=\"title\">class</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> defaultReuseIdentifier: <span class=\"type\">String</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">ReusableView</span> <span class=\"title\">where</span> <span class=\"title\">Self</span>: <span class=\"title\">UIView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> defaultReuseIdentifier: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">NSStringFromClass</span>(<span class=\"keyword\">self</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">UICollectionViewCell</span>: <span class=\"title\">ReusableView</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过让 <code>UICollectionViewCell</code> 遵循 <code>ReusableView</code> 协议，我们可以得到每个cell子类的一个唯一的重用标识。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> identifier = <span class=\"type\">BookCell</span>.defaultReuseIdentifier</span><br><span class=\"line\"><span class=\"comment\">// identifier = \"MyModule.BookCell\"</span></span><br></pre></td></tr></table></figure>\n<p>接下来，我们通过同样的方法，将注册Nib步骤中的一些脏代码给去除掉。  </p>\n<p>我们创建一个 <strong>Nib Loadable Views</strong> 的协议并通过协议拓展添加一个默认方法实现。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">NibLoadableView</span>: <span class=\"title\">class</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> nibName: <span class=\"type\">String</span> &#123; <span class=\"keyword\">get</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">NibLoadableView</span> <span class=\"title\">where</span> <span class=\"title\">Self</span>: <span class=\"title\">UIView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">var</span> nibName: <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">NSStringFromClass</span>(<span class=\"keyword\">self</span>).componentsSeparatedByString(<span class=\"string\">\".\"</span>).last!</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">BookCell</span>: <span class=\"title\">NibLoadableView</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过让我们的 <code>BookCell</code> 类遵循 <code>NibLoadableView</code> 协议，现在我们就有了一个更安全和方便的方法去获得到Nib的名称。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> nibName = <span class=\"type\">BookCell</span>.nibName</span><br><span class=\"line\"><span class=\"comment\">// nibName = \"BookCell\"</span></span><br></pre></td></tr></table></figure>\n<p>有这两个协议，我们可以通过使用 <strong>Swift的泛型</strong> 并且通过拓展 <code>UICollectionView</code> 来简化cell的注册和使用。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">UICollectionView</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">register</span>&lt;T: UICollectionViewCell where T: ReusableView&gt;<span class=\"params\">(<span class=\"number\">_</span>: T.<span class=\"keyword\">Type</span>)</span></span> &#123;</span><br><span class=\"line\">        registerClass(<span class=\"type\">T</span>.<span class=\"keyword\">self</span>, forCellWithReuseIdentifier: <span class=\"type\">T</span>.defaultReuseIdentifier)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">register</span>&lt;T: UICollectionViewCell where T: ReusableView, T: NibLoadableView&gt;<span class=\"params\">(<span class=\"number\">_</span>: T.<span class=\"keyword\">Type</span>)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> bundle = <span class=\"type\">NSBundle</span>(forClass: <span class=\"type\">T</span>.<span class=\"keyword\">self</span>)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> nib = <span class=\"type\">UINib</span>(nibName: <span class=\"type\">T</span>.nibName, bundle: bundle)</span><br><span class=\"line\">        </span><br><span class=\"line\">        registerNib(nib, forCellWithReuseIdentifier: <span class=\"type\">T</span>.defaultReuseIdentifier)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">dequeueReusableCell</span>&lt;T: UICollectionViewCell where T: ReusableView&gt;<span class=\"params\">(forIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class=\"type\">T</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> cell = dequeueReusableCellWithReuseIdentifier(<span class=\"type\">T</span>.defaultReuseIdentifier, forIndexPath: indexPath) <span class=\"keyword\">as</span>? <span class=\"type\">T</span> <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">fatalError</span>(<span class=\"string\">\"Could not dequeue cell with identifier: \\(T.defaultReuseIdentifier)\"</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意这里，我们创建了两个版本的注册方法，一个是用来注册 <code>ReusableView</code> 子类用的，一个是用来注册 <code>ReusableView</code> 和 <code>NibLoadableView</code>的子类。这很好的将view controller的特定的注册方法分离出来。</p>\n<p>另一个比较棒的细节就是 <code>dequeueReusableCell</code> 方法不再需要给他任何重用标识字符串而且可以直接使用cell的子类作为返回值。</p>\n<p>现在cell的注册和使用代码看起来棒极了 :) 。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookListViewController</span>: <span class=\"title\">UIViewController</span>, <span class=\"title\">UICollectionViewDataSource</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@IBOutlet</span> <span class=\"keyword\">private</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> collectionView: <span class=\"type\">UICollectionView</span>!</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">self</span>.collectionView.register(<span class=\"type\">BookCell</span>.<span class=\"keyword\">self</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">collectionView</span><span class=\"params\">(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class=\"type\">UICollectionViewCell</span> &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> cell: <span class=\"type\">BookCell</span> = collectionView.dequeueReusableCell(forIndexPath: indexPath)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// <span class=\"doctag\">TODO:</span> configure cell</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>如果你是从 Objective-C 转到 Swift 的话，研究Swift强大的新特性比如 <strong>协议拓展</strong>、 <strong>泛型</strong>， 从而找到更优雅的实现方式和替代方法是非常值得的。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjsk52ax10000ae3rv1ivhrsa","tag_id":"cjsk52axa0004ae3r985xaeli","_id":"cjsk52axg0009ae3r7zkkm0e3"},{"post_id":"cjsk52ax70002ae3r4s3h9u88","tag_id":"cjsk52axg0008ae3raw9t9l4j","_id":"cjsk52axk000eae3rcvckkhm9"},{"post_id":"cjsk52ax70002ae3r4s3h9u88","tag_id":"cjsk52axh000aae3ru4wg7ups","_id":"cjsk52axk000fae3r1xxh0cfl"},{"post_id":"cjsk52ax70002ae3r4s3h9u88","tag_id":"cjsk52axh000bae3rdfzqx3sq","_id":"cjsk52axl000hae3rxs54ss94"},{"post_id":"cjsk52ax70002ae3r4s3h9u88","tag_id":"cjsk52axi000cae3rmh0g8716","_id":"cjsk52axl000iae3r53d2o6h9"},{"post_id":"cjsk52axc0005ae3rk8qwga37","tag_id":"cjsk52axa0004ae3r985xaeli","_id":"cjsk52axl000kae3rjbw8izs6"},{"post_id":"cjsk52axe0006ae3rwm1h7l12","tag_id":"cjsk52axk000gae3r91ym6jq1","_id":"cjsk52axm000lae3rfmlccmb5"},{"post_id":"cjsk52axf0007ae3rvx6lrkhj","tag_id":"cjsk52axa0004ae3r985xaeli","_id":"cjsk52axm000mae3rfd3wft86"},{"post_id":"cjsk52axf0007ae3rvx6lrkhj","tag_id":"cjsk52axl000jae3roecyz6g3","_id":"cjsk52axm000nae3rhzfgofs0"}],"Tag":[{"name":"iOS","_id":"cjsk52axa0004ae3r985xaeli"},{"name":"Python","_id":"cjsk52axg0008ae3raw9t9l4j"},{"name":"Flask","_id":"cjsk52axh000aae3ru4wg7ups"},{"name":"OpenSSL","_id":"cjsk52axh000bae3rdfzqx3sq"},{"name":"Linux","_id":"cjsk52axi000cae3rmh0g8716"},{"name":"sublime text","_id":"cjsk52axk000gae3r91ym6jq1"},{"name":"Swift","_id":"cjsk52axl000jae3roecyz6g3"}]}}